library(ggplot2)
library(tidyverse)
all_data <- read.csv('gender_processing_a_selfpaced_reading_time_study-merged.csv') %>%
filter(trial_id != 'example')
summary(all_data)
gender_transcendence_cols <- c('subject_information.gender_q1','subject_information.gender_q2','subject_information.gender_q3','subject_information.gender_q4','subject_information.gender_q5')
gender_linked_cols <- c('subject_information.gender_q6','subject_information.gender_q7','subject_information.gender_q8','subject_information.gender_q9','subject_information.gender_q10','subject_information.gender_q11','subject_information.gender_q12','subject_information.gender_q13')
all_data <- all_data %>%
mutate(gender_trans = 100 - (rowMeans(all_data[gender_transcendence_cols]))) %>%
mutate(gender_link = rowMeans(all_data[gender_linked_cols]))
summary(all_data)
all_data <- all_data %>%
filter(region=='critical')
ggplot(data = all_data, aes(x=condition, y=rt)) +
geom_col()
all_data <- all_data %>%
mutate(trial_gender = ifelse(condition=='neutral_female' | condition == 'congruent_female','female','male'))
View(all_data)
ggplot(data = all_data, aes(x=gender, y=rt)) +
geom_col()
library(ggplot2)
library(tidyverse)
all_data <- read.csv('gender_processing_a_selfpaced_reading_time_study-merged.csv') %>%
filter(trial_id != 'example')
summary(all_data)
gender_transcendence_cols <- c('subject_information.gender_q1','subject_information.gender_q2','subject_information.gender_q3','subject_information.gender_q4','subject_information.gender_q5')
gender_linked_cols <- c('subject_information.gender_q6','subject_information.gender_q7','subject_information.gender_q8','subject_information.gender_q9','subject_information.gender_q10','subject_information.gender_q11','subject_information.gender_q12','subject_information.gender_q13')
all_data <- all_data %>%
mutate(gender_trans = 100 - (rowMeans(all_data[gender_transcendence_cols]))) %>%
mutate(gender_link = rowMeans(all_data[gender_linked_cols]))
all_data <- all_data %>%
mutate(trial_gender = ifelse(condition=='neutral_female' | condition == 'congruent_female','female','male'))
summary(all_data)
all_data <- all_data %>%
filter(region=='critical')
ggplot(data = all_data, aes(x=trial_gender, y=rt)) +
geom_col()
ggplot(data = all_data, aes(x=trial_gender, y=mean(rt))) +
geom_col()
ggplot(data = all_data, aes(x=trial_gender, y=mean(rt$trial_gender))) +
geom_col()
ggplot(data = all_data, aes(x=condition, y=rt)) +
geom_col()
ggplot(data = all_data, aes(x=condition, y=rt)) +
geom_bar()
ggplot(data = all_data, aes(x=condition, y=rt)) +
geom_col()
all_data %>% group_by(trial_gender) %>%
summarise(mean(rt))
all_data %>% group_by(condition) %>%
summarise(mean(rt))
all_data %>% group_by(condition) %>%
summarise(mean(rt)) %>%
ggplot(aes(x= codition, y=rt)) +
geom_col
all_data %>% group_by(condition) %>%
summarise(mean(rt)) %>%
ggplot(aes(x= codition, y=rt)) +
geom_col(0)
all_data %>% group_by(condition) %>%
summarise(mean(rt)) %>%
ggplot(aes(x= codition, y=rt)) +
geom_col()
all_data %>% group_by(condition) %>%
summarise(mean(rt)) %>%
ggplot(aes(x= condition, y=rt)) +
geom_col()
all_data %>% group_by(condition) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= condition, y=mean_rt)) +
geom_col()
all_data %>% group_by(trial_gender) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_gender, y=mean_rt)) +
geom_col()
all_data <- all_data %>%
mutate(trial_congruency = ifelse(condition=='congruent_male' | condition == 'congruent_female','congruent','neutral'))
all_data %>% group_by(trial_congruency) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_congruency, y=mean_rt)) +
geom_col()
all_data %>% filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'hunter' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(trial_congruency) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_congruency, y=mean_rt)) +
geom_col()
all_data %>% filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'hunter' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(trial_gender) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_gender, y=mean_rt)) +
geom_col()
all_data %>% filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'hunter' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(condition) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= condition, y=mean_rt)) +
geom_col()
all_data %>% filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'hunter' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(condition) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= condition, y=mean_rt)) +
geom_col()
all_data %>%
group_by(trial_congruency) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_congruency, y=mean_rt)) +
geom_col()
all_data %>% filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'hunter' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(trial_congruency) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_congruency, y=mean_rt)) +
geom_col()
all_data filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'hunter' & lexeme!= 'heir' & lexeme!= 'hero') %>%
all_data %>%
filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'hunter' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(condition) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= condition, y=mean_rt)) +
geom_col()
all_data %>% filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'hunter' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(trial_gender) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_gender, y=mean_rt)) +
geom_col()
all_data %>% filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'hunter' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(trial_congruency) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_congruency, y=mean_rt)) +
geom_col()
all_data %>%
group_by(trial_congruency) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_congruency, y=mean_rt)) +
geom_col()
all_data %>%
group_by(trial_congruency) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_congruency, y=log(mean_rt))) +
geom_col()
all_data %>%
group_by(trial_congruency) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_congruency, y=mean_rt)) +
geom_col()
all_data %>%
filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'hunter' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(trial_congruency) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_congruency, y=mean_rt)) +
geom_col()
all_data <- all_data %>%
mutate(trial_gender = ifelse(condition=='neutral_female' | condition == 'congruent_female','female','male')) %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'hunter' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption'))
all_data %>%
filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(condition) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= condition, y=mean_rt)) +
geom_col()
all_data %>% filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(trial_gender) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_gender, y=mean_rt)) +
geom_col()
all_data %>%
filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(trial_congruency) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_congruency, y=mean_rt)) +
geom_col()
all_data <- all_data %>%
mutate(trial_gender = ifelse(condition=='neutral_female' | condition == 'congruent_female','female','male')) %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption'))
all_data %>%
group_by(morph_type) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= morph_type, y=mean_rt)) +
geom_col()
all_data %>%
filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(trial_congruency) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_congruency, y=mean_rt)) +
geom_col()
all_data %>%
group_by(condition) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= condition, y=mean_rt)) +
geom_col() +
facet_wrap(morph_type)
all_data %>%
group_by(condition,morph_type) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= condition, y=mean_rt)) +
geom_col() +
facet_wrap(morph_type)
all_data %>%
group_by(condition,morph_type) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= condition, y=mean_rt)) +
geom_col()
all_data %>%
group_by(condition) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= condition, y=mean_rt)) +
geom_col()
library(lme4)
library(lmer)
install.packages('lme4')
library(lme4)
gender_verification <- lmer(gender_link~gender_trans, data=all_data)
gender_verification <- lmer(gender_link~gender_trans + (1|workerid), data=all_data)
summary(gender_verific)
summary(gender_verification)
gender_verification <- lmer(gender_link~gender_trans + (1|workerid), data=all_data)
all_data <- read.csv('gender_processing_a_selfpaced_reading_time_study-merged.csv')
all_data <- all_data %>%
filter(trial_id!= 'example')
library(ggplot2) #data visualization
library(tidyverse) #data management and manipulation
library(lme4) #mixed-effect models
library(stringr) #needed to compute string lengths
source("helpers.R") #custom code for implementing error bars in ggplot2 plots
theme_set(theme_bw())
all_data <- read.csv('gender_processing_a_selfpaced_reading_time_study-merged.csv')
all_data <- all_data %>%
filter(trial_id!= 'example')
all_data <- all_data %>%
filter(trial_id!= 'example')
exclusion <- all_data %>% group_by(workerid) %>%
summarise(accuracy = mean(response_correct)) %>%
mutate(exclude = ifelse(accuracy < 0.85,'Yes','No')) %>%
filter(exclude == 'Yes') %>%
select(workerid)
all_data <- all_data[!(all_data$workerid %in% exclusion$workerid),]
all_data <- all_data %>%
filter(region=='critical')
library(ggplot2)
library(tidyverse)
library(lme4)
library(stringr)
source("helpers.R")
theme_set(theme_bw())
all_data <- read.csv('gender_processing_a_selfpaced_reading_time_study-merged.csv')
all_data <- all_data %>%
filter(trial_id!= 'example')
exclusion <- all_data %>% group_by(workerid) %>%
summarise(accuracy = mean(response_correct)) %>%
mutate(exclude = ifelse(accuracy < 0.85,'Yes','No')) %>%
filter(exclude == 'Yes') %>%
select(workerid)
all_data <- all_data[!(all_data$workerid %in% exclusion$workerid),]
gender_transcendence_cols <- c('subject_information.gender_q1','subject_information.gender_q2','subject_information.gender_q3','subject_information.gender_q4','subject_information.gender_q5')
gender_linked_cols <- c('subject_information.gender_q6','subject_information.gender_q7','subject_information.gender_q8','subject_information.gender_q9','subject_information.gender_q10','subject_information.gender_q11','subject_information.gender_q12','subject_information.gender_q13')
all_data <- all_data %>%
mutate(gender_trans = 100 - (rowMeans(all_data[gender_transcendence_cols]))) %>%
mutate(gender_link = rowMeans(all_data[gender_linked_cols]))
all_data <- all_data %>%
mutate(trial_gender = ifelse(condition=='neutral_female' | condition == 'congruent_female','female','male')) %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption'))
all_data <- all_data %>%
mutate(form_length = str_length(form))
all_data <- all_data %>%
mutate(trial_congruency = ifelse(condition=='congruent_male' | condition == 'congruent_female','congruent','neutral'))
summary(all_data)
all_data <- all_data %>%
filter(region=='critical')
to_plot <- all_data %>%
group_by(condition) %>%
summarise(mean_rt = mean(rt), CI.LOW = ci.low(rt), CI.HIGH = ci.high(rt)) %>%
ungroup() %>%
mutate(YMin = mean_rt-CI.LOW, YMax = mean_rt+CI.HIGH)
ggplot(to_plot,aes(x=condition,y=mean_rt, fill=condition)) +
geom_bar(stat='identity') +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
all_data %>% filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(trial_gender) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_gender, y=mean_rt)) +
geom_col()
all_data %>%
filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(trial_congruency) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_congruency, y=mean_rt)) +
geom_col()
all_data %>%
group_by(morph_type) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= morph_type, y=mean_rt)) +
geom_col()
all_data %>%
group_by(form_length) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= form_length, y=mean_rt)) +
geom_col()
reg_analysis <- lmer(log(rt)~condition*morph_type + (1|workerid) + (1|lexeme) + (1|form_length), data = all_data)
summary(reg_analysis)
plot()
library(ggplot2)
library(tidyverse)
library(lme4)
library(stringr)
source("helpers.R")
exclusion <- all_data %>% group_by(workerid) %>%
summarise(accuracy = mean(response_correct))
# mutate(exclude = ifelse(accuracy < 0.85,'Yes','No')) %>%
# filter(exclude == 'Yes') %>%
# select(workerid)
#all_data <- all_data[!(all_data$workerid %in% exclusion$workerid),]
exclusion
exclusion <- all_data %>% group_by(workerid) %>%
summarise(accuracy = mean(response_correct))
# mutate(exclude = ifelse(accuracy < 0.85,'Yes','No')) %>%
# filter(exclude == 'Yes') %>%
# select(workerid)
#all_data <- all_data[!(all_data$workerid %in% exclusion$workerid),]
exclusion
gender_transcendence_cols <- c('subject_information.gender_q1','subject_information.gender_q2','subject_information.gender_q3','subject_information.gender_q4','subject_information.gender_q5')
gender_linked_cols <- c('subject_information.gender_q6','subject_information.gender_q7','subject_information.gender_q8','subject_information.gender_q9','subject_information.gender_q10','subject_information.gender_q11','subject_information.gender_q12','subject_information.gender_q13')
all_data <- all_data %>%
mutate(gender_trans = 100 - (rowMeans(all_data[gender_transcendence_cols]))) %>%
mutate(gender_link = rowMeans(all_data[gender_linked_cols]))
all_data <- all_data %>%
mutate(trial_gender = ifelse(condition=='neutral_female' | condition == 'congruent_female','female','male')) %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption'))
all_data <- all_data %>%
mutate(form_length = str_length(form))
all_data <- all_data %>%
mutate(trial_congruency = ifelse(condition=='congruent_male' | condition == 'congruent_female','congruent','neutral'))
summary(all_data)
to_plot <- all_data %>%
group_by(condition) %>%
summarise(mean_rt = mean(rt), CI.LOW = ci.low(rt), CI.HIGH = ci.high(rt)) %>%
ungroup() %>%
mutate(YMin = mean_rt-CI.LOW, YMax = mean_rt+CI.HIGH)
ggplot(to_plot,aes(x=condition,y=mean_rt, fill=condition)) +
geom_bar(stat='identity') +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25)
all_data %>% filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(trial_gender) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_gender, y=mean_rt)) +
geom_col()
all_data %>%
filter(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero') %>%
group_by(trial_congruency) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= trial_congruency, y=mean_rt)) +
geom_col()
all_data %>%
group_by(morph_type) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= morph_type, y=mean_rt)) +
geom_col()
all_data %>%
group_by(form_length) %>%
summarise(mean_rt = mean(rt)) %>%
ggplot(aes(x= form_length, y=mean_rt)) +
geom_col()
reg_analysis <- lmer(log(rt)~condition*morph_type + (1|workerid) + (1|lexeme) + (1|form_length), data = all_data)
summary(reg_analysis)
plot()
all_data <- read.csv('gender_processing_a_selfpaced_reading_time_study-merged.csv')
all_data <- all_data %>%
filter(trial_id!= 'example')
all_data <- all_data %>%
filter(region=='critical')
exclusion <- all_data %>% group_by(workerid) %>%
summarise(accuracy = mean(response_correct))
# mutate(exclude = ifelse(accuracy < 0.85,'Yes','No')) %>%
# filter(exclude == 'Yes') %>%
# select(workerid)
#all_data <- all_data[!(all_data$workerid %in% exclusion$workerid),]
exclusion
exclusion <- exclusion %>%
mutate(exclude = ifelse(accuracy < 0.85,'Yes','No'))
exclusion
