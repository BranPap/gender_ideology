mutate(gender_trans = 100 - (rowMeans(all_data[gender_transcendence_cols]))) %>%
mutate(gender_link = rowMeans(all_data[gender_linked_cols]))
all_data %>%
select(workerid,rt,gender_trans,gender_link)
gender_all = c('gender_trans','gender_link')
all_data <- all_data %>%
mutate(gender_total = rowMeans(all_data[gender_all]))
all_data %>%
select(workerid,rt,gender_trans,gender_link,gender_total)
all_data <- all_data %>%
mutate(trial_gender = ifelse(condition=='neutral_female' | condition == 'congruent_female','female','male'))
all_data %>%
select(workerid,rt,condition,trial_id,trial_gender)
all_data <- all_data%>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption'))
all_data %>%
select(rt,lexeme,morph_type)
all_data <- all_data %>%
mutate(form_length = str_length(form))
all_data %>%
select(rt,lexeme,form,form_length)
all_data <- all_data %>%
mutate(trial_congruency = ifelse(condition=='congruent_male' | condition == 'congruent_female','congruent','neutral'))
all_data %>%
select(rt,condition,trial_congruency)
head(all_data)
inauguration_2021 = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a")
ggplot(all_data, aes(x=log(rt), fill=morph_type)) +
geom_density(alpha=.6) +
labs(x="Log-transformed Reading Time", y="Density",fill="Critical Item Gender")
ggplot(all_data, aes(x=gender_total, y=log(rt),color=morph_type)) +
geom_point(alpha=.5) +
geom_smooth(method = 'lm', size=1.2) +
facet_wrap(~trial_gender)
all_data %>% filter(rt<2000) %>%
ggplot(aes(x=morph_type, y=rt)) +
geom_boxplot()
all_data %>% filter(10<rt<2000) %>%
all_data %>% filter(rt<2000 & rt>10) %>%
ggplot(aes(x=morph_type, y=rt)) +
geom_boxplot()
all_data %>%
group_by(morph_type)
aggr_morph_type <- all_data %>%
group_by(morph_type) %>%
mutate(MeanRT = mean(rt))
aggr_morph_type <- all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt))
View(aggr_morph_type)
aggr_morph_type <- all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt)) %>%
ggplot(aes(x=morph_type,y=MeanRT))
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt)) %>%
ggplot(aes(x=morph_type,y=MeanRT))
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt)) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col()
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt)) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col()
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col()
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High)
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col()
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col() +
geom_errorbar(aes(ymin=YMin,ymax=YMax), width=.25)
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col() +
geom_errorbar(aes(ymin=YMin,ymax=YMax), width=.25) +
geom_jitter(aes(y=rt),alpha=.2,color='lightblue')
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col() +
geom_jitter(aes(y=rt),alpha=.2,color='lightblue') +
geom_errorbar(aes(ymin=YMin,ymax=YMax), width=.25)
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col() +
geom_jitter(data = all_data, aes(y=rt),alpha=.2,color='lightblue') +
geom_errorbar(aes(ymin=YMin,ymax=YMax), width=.25)
all_data %>%
filter(rt<2000) %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col() +
geom_jitter(data = all_data, aes(y=rt),alpha=.2,color='lightblue') +
geom_errorbar(aes(ymin=YMin,ymax=YMax), width=.25)
all_data <- read.csv('gender_processing_a_selfpaced_reading_time_study-merged.csv') %>%
filter(rt<2000)
all_data <- read.csv('gender_processing_a_selfpaced_reading_time_study-merged.csv') %>%
filter(rt<2000)
all_data %>%
head()
all_data <- all_data %>%
filter(trial_id!= 'example')
all_data %>%
select(workerid,rt,trial_id)
all_data <- all_data %>%
filter(region=='critical')
all_data %>%
select(workerid,rt,region)
exclusion <- all_data %>% group_by(workerid) %>%
summarise(accuracy = mean(response_correct))
exclusion
exclusion <- exclusion %>%
mutate(exclude = ifelse(accuracy < 0.85,'Yes','No'))
exclusion
exclusion = exclusion %>%
filter(exclude == 'Yes') %>%
select(workerid)
exclusion
all_data <- all_data[!(all_data$workerid %in% exclusion$workerid),]
all_data %>%
select(workerid,rt,trial_id)
200 - length(unique(all_data$workerid))
length(unique(exclusion$workerid))
200 - length(unique(all_data$workerid)) == length(unique(exclusion$workerid))
gender_transcendence_cols <- c('subject_information.gender_q1','subject_information.gender_q2','subject_information.gender_q3','subject_information.gender_q4','subject_information.gender_q5')
gender_linked_cols <- c('subject_information.gender_q6','subject_information.gender_q7','subject_information.gender_q8','subject_information.gender_q9','subject_information.gender_q10','subject_information.gender_q11','subject_information.gender_q12','subject_information.gender_q13')
all_data <- all_data %>%
mutate(gender_trans = 100 - (rowMeans(all_data[gender_transcendence_cols]))) %>%
mutate(gender_link = rowMeans(all_data[gender_linked_cols]))
all_data %>%
select(workerid,rt,gender_trans,gender_link)
gender_all = c('gender_trans','gender_link')
all_data <- all_data %>%
mutate(gender_total = rowMeans(all_data[gender_all]))
all_data %>%
select(workerid,rt,gender_trans,gender_link,gender_total)
all_data <- all_data %>%
mutate(trial_gender = ifelse(condition=='neutral_female' | condition == 'congruent_female','female','male'))
all_data %>%
select(workerid,rt,condition,trial_id,trial_gender)
all_data <- all_data%>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption'))
all_data %>%
select(rt,lexeme,morph_type)
all_data <- all_data %>%
mutate(form_length = str_length(form))
all_data %>%
select(rt,lexeme,form,form_length)
all_data <- all_data %>%
mutate(trial_congruency = ifelse(condition=='congruent_male' | condition == 'congruent_female','congruent','neutral'))
all_data %>%
select(rt,condition,trial_congruency)
head(all_data)
inauguration_2021 = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a")
ggplot(all_data, aes(x=log(rt), fill=morph_type)) +
geom_density(alpha=.6) +
labs(x="Log-transformed Reading Time", y="Density",fill="Critical Item Gender")
ggplot(all_data, aes(x=gender_total, y=log(rt),color=morph_type)) +
geom_point(alpha=.5) +
geom_smooth(method = 'lm', size=1.2) +
facet_wrap(~trial_gender)
all_data %>% filter(rt<2000 & rt>10) %>%
ggplot(aes(x=morph_type, y=rt)) +
geom_boxplot()
all_data %>%
filter(rt<2000) %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col() +
geom_jitter(data = all_data, aes(y=rt),alpha=.2,color='lightblue') +
geom_errorbar(aes(ymin=YMin,ymax=YMax), width=.25)
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col() +
geom_jitter(data = all_data, aes(y=rt),alpha=.2,color='lightblue') +
geom_errorbar(aes(ymin=YMin,ymax=YMax), width=.25)
agg_speaker_mean <- all_data %>%
group_by(morph_type,workerid) %>%
summarize(MeanRT=mean(rt))
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col() +
geom_jitter(data = agg_speaker_mean, aes(y=rt),alpha=.2,color='lightblue') +
geom_errorbar(aes(ymin=YMin,ymax=YMax), width=.25)
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col() +
geom_jitter(data = agg_speaker_mean, aes(y=MeanRT),alpha=.2,color='lightblue') +
geom_errorbar(aes(ymin=YMin,ymax=YMax), width=.25)
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col() +
geom_jitter(data = agg_speaker_mean, aes(y=MeanRT),alpha=.2,color='blue') +
geom_errorbar(aes(ymin=YMin,ymax=YMax), width=.25)
View(agg_speaker_mean)
all_data <- read.csv('gender_processing_a_selfpaced_reading_time_study-merged.csv')
all_data %>%
head()
agg_speaker_mean <- all_data %>%
group_by(morph_type,workerid) %>%
summarize(MeanRT=mean(rt))
agg_speaker_mean <- all_data %>%
group_by(morph_type,workerid) %>%
summarize(MeanRT=mean(rt))
agg_speaker_mean <- all_data %>%
group_by(morph_type,workerid) %>%
summarize(MeanRT=mean(rt))
agg_speaker_mean <- all_data %>%
group_by(morph_type,workerid) %>%
summarize(MeanRT=mean(rt))
agg_speaker_mean <- all_data %>%
group_by(morph_type,workerid) %>%
summarize(MeanRT=mean(rt))
library(ggplot2)
library(tidyverse)
library(lme4)
library(stringr)
library(languageR)
source("helpers.R")
theme_set(theme_bw())
all_data <- read.csv('gender_processing_a_selfpaced_reading_time_study-merged.csv')
all_data %>%
head()
all_data <- all_data %>%
filter(trial_id!= 'example')
all_data %>%
select(workerid,rt,trial_id)
all_data <- all_data %>%
filter(region=='critical')
all_data %>%
select(workerid,rt,region)
exclusion <- all_data %>% group_by(workerid) %>%
summarise(accuracy = mean(response_correct))
exclusion
exclusion <- exclusion %>%
mutate(exclude = ifelse(accuracy < 0.85,'Yes','No'))
exclusion
exclusion = exclusion %>%
filter(exclude == 'Yes') %>%
select(workerid)
exclusion
all_data <- all_data[!(all_data$workerid %in% exclusion$workerid),]
all_data %>%
select(workerid,rt,trial_id)
200 - length(unique(all_data$workerid))
length(unique(exclusion$workerid))
200 - length(unique(all_data$workerid)) == length(unique(exclusion$workerid))
gender_transcendence_cols <- c('subject_information.gender_q1','subject_information.gender_q2','subject_information.gender_q3','subject_information.gender_q4','subject_information.gender_q5')
gender_linked_cols <- c('subject_information.gender_q6','subject_information.gender_q7','subject_information.gender_q8','subject_information.gender_q9','subject_information.gender_q10','subject_information.gender_q11','subject_information.gender_q12','subject_information.gender_q13')
all_data <- all_data %>%
mutate(gender_trans = 100 - (rowMeans(all_data[gender_transcendence_cols]))) %>%
mutate(gender_link = rowMeans(all_data[gender_linked_cols]))
all_data %>%
select(workerid,rt,gender_trans,gender_link)
gender_all = c('gender_trans','gender_link')
all_data <- all_data %>%
mutate(gender_total = rowMeans(all_data[gender_all]))
all_data %>%
select(workerid,rt,gender_trans,gender_link,gender_total)
all_data <- all_data %>%
mutate(trial_gender = ifelse(condition=='neutral_female' | condition == 'congruent_female','female','male'))
all_data %>%
select(workerid,rt,condition,trial_id,trial_gender)
all_data <- all_data%>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption'))
all_data %>%
select(rt,lexeme,morph_type)
all_data <- all_data %>%
mutate(form_length = str_length(form))
all_data %>%
select(rt,lexeme,form,form_length)
all_data <- all_data %>%
mutate(trial_congruency = ifelse(condition=='congruent_male' | condition == 'congruent_female','congruent','neutral'))
all_data %>%
select(rt,condition,trial_congruency)
head(all_data)
inauguration_2021 = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a")
ggplot(all_data, aes(x=log(rt), fill=morph_type)) +
geom_density(alpha=.6) +
labs(x="Log-transformed Reading Time", y="Density",fill="Critical Item Gender")
ggplot(all_data, aes(x=gender_total, y=log(rt),color=morph_type)) +
geom_point(alpha=.5) +
geom_smooth(method = 'lm', size=1.2) +
facet_wrap(~trial_gender)
all_data %>% filter(rt<2000 & rt>10) %>%
ggplot(aes(x=morph_type, y=rt)) +
geom_boxplot()
agg_speaker_mean <- all_data %>%
group_by(morph_type,workerid) %>%
summarize(MeanRT=mean(rt))
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col() +
geom_jitter(data = agg_speaker_mean, aes(y=MeanRT),alpha=.2,color='blue') +
geom_errorbar(aes(ymin=YMin,ymax=YMax), width=.25)
library(ggplot2)
library(tidyverse)
library(lme4)
library(stringr)
library(languageR)
source("helpers.R")
theme_set(theme_bw())
all_data <- read.csv('gender_processing_a_selfpaced_reading_time_study-merged.csv')
all_data %>%
head()
all_data <- all_data %>%
filter(trial_id!= 'example')
all_data %>%
select(workerid,rt,trial_id)
all_data <- all_data %>%
filter(region=='critical' | word_idx == 5)
all_data %>%
select(workerid,rt,region)
exclusion <- all_data %>% group_by(workerid) %>%
summarise(accuracy = mean(response_correct))
exclusion
exclusion <- exclusion %>%
mutate(exclude = ifelse(accuracy < 0.85,'Yes','No'))
exclusion
exclusion = exclusion %>%
filter(exclude == 'Yes') %>%
select(workerid)
exclusion
all_data <- all_data[!(all_data$workerid %in% exclusion$workerid),]
all_data %>%
select(workerid,rt,trial_id)
200 - length(unique(all_data$workerid))
length(unique(exclusion$workerid))
200 - length(unique(all_data$workerid)) == length(unique(exclusion$workerid))
gender_transcendence_cols <- c('subject_information.gender_q1','subject_information.gender_q2','subject_information.gender_q3','subject_information.gender_q4','subject_information.gender_q5')
gender_linked_cols <- c('subject_information.gender_q6','subject_information.gender_q7','subject_information.gender_q8','subject_information.gender_q9','subject_information.gender_q10','subject_information.gender_q11','subject_information.gender_q12','subject_information.gender_q13')
all_data <- all_data %>%
mutate(gender_trans = 100 - (rowMeans(all_data[gender_transcendence_cols]))) %>%
mutate(gender_link = rowMeans(all_data[gender_linked_cols]))
all_data %>%
select(workerid,rt,gender_trans,gender_link)
gender_all = c('gender_trans','gender_link')
all_data <- all_data %>%
mutate(gender_total = rowMeans(all_data[gender_all]))
all_data %>%
select(workerid,rt,gender_trans,gender_link,gender_total)
all_data <- all_data %>%
mutate(trial_gender = ifelse(condition=='neutral_female' | condition == 'congruent_female','female','male'))
all_data %>%
select(workerid,rt,condition,trial_id,trial_gender)
all_data <- all_data%>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption'))
all_data %>%
select(rt,lexeme,morph_type)
all_data <- all_data %>%
mutate(form_length = str_length(form))
all_data %>%
select(rt,lexeme,form,form_length)
all_data <- all_data %>%
mutate(trial_congruency = ifelse(condition=='congruent_male' | condition == 'congruent_female','congruent','neutral'))
all_data %>%
select(rt,condition,trial_congruency)
head(all_data)
inauguration_2021 = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a")
ggplot(all_data, aes(x=log(rt), fill=morph_type)) +
geom_density(alpha=.6) +
labs(x="Log-transformed Reading Time", y="Density",fill="Critical Item Gender")
ggplot(all_data, aes(x=gender_total, y=log(rt),color=morph_type)) +
geom_point(alpha=.5) +
geom_smooth(method = 'lm', size=1.2) +
facet_wrap(~trial_gender)
all_data %>% filter(rt<2000 & rt>10) %>%
ggplot(aes(x=morph_type, y=rt)) +
geom_boxplot()
agg_speaker_mean <- all_data %>%
group_by(morph_type,workerid) %>%
summarize(MeanRT=mean(rt))
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col() +
geom_jitter(data = agg_speaker_mean, aes(y=MeanRT),alpha=.2,color='blue') +
geom_errorbar(aes(ymin=YMin,ymax=YMax), width=.25)
library(ggplot2)
library(tidyverse)
library(lme4)
library(stringr)
library(languageR)
source("helpers.R")
theme_set(theme_minimal())
all_data <- read.csv('gender_processing_a_selfpaced_reading_time_study-merged.csv')
all_data %>%
head()
all_data <- all_data %>%
filter(trial_id!= 'example')
all_data %>%
select(workerid,rt,trial_id)
all_data <- all_data %>%
filter(region=='critical' | word_idx == 4)
all_data %>%
select(workerid,rt,region)
exclusion <- all_data %>% group_by(workerid) %>%
summarise(accuracy = mean(response_correct))
exclusion
exclusion <- exclusion %>%
mutate(exclude = ifelse(accuracy < 0.85,'Yes','No'))
exclusion
exclusion = exclusion %>%
filter(exclude == 'Yes') %>%
select(workerid)
exclusion
all_data <- all_data[!(all_data$workerid %in% exclusion$workerid),]
all_data %>%
select(workerid,rt,trial_id)
200 - length(unique(all_data$workerid))
length(unique(exclusion$workerid))
200 - length(unique(all_data$workerid)) == length(unique(exclusion$workerid))
gender_transcendence_cols <- c('subject_information.gender_q1','subject_information.gender_q2','subject_information.gender_q3','subject_information.gender_q4','subject_information.gender_q5')
gender_linked_cols <- c('subject_information.gender_q6','subject_information.gender_q7','subject_information.gender_q8','subject_information.gender_q9','subject_information.gender_q10','subject_information.gender_q11','subject_information.gender_q12','subject_information.gender_q13')
all_data <- all_data %>%
mutate(gender_trans = 100 - (rowMeans(all_data[gender_transcendence_cols]))) %>%
mutate(gender_link = rowMeans(all_data[gender_linked_cols]))
all_data %>%
select(workerid,rt,gender_trans,gender_link)
gender_all = c('gender_trans','gender_link')
all_data <- all_data %>%
mutate(gender_total = rowMeans(all_data[gender_all]))
all_data %>%
select(workerid,rt,gender_trans,gender_link,gender_total)
all_data <- all_data %>%
mutate(trial_gender = ifelse(condition=='neutral_female' | condition == 'congruent_female','female','male'))
all_data %>%
select(workerid,rt,condition,trial_id,trial_gender)
all_data <- all_data%>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption'))
all_data %>%
select(rt,lexeme,morph_type)
all_data <- all_data %>%
mutate(form_length = str_length(form))
all_data %>%
select(rt,lexeme,form,form_length)
all_data <- all_data %>%
mutate(trial_congruency = ifelse(condition=='congruent_male' | condition == 'congruent_female','congruent','neutral'))
all_data %>%
select(rt,condition,trial_congruency)
head(all_data)
inauguration_2021 = c("#5445b1", "#749dae", "#f3c483", "#5c1a33", "#cd3341","#f7dc6a")
ggplot(all_data, aes(x=log(rt), fill=morph_type)) +
geom_density(alpha=.6) +
labs(x="Log-transformed Reading Time", y="Density",fill="Critical Item Gender")
ggplot(all_data, aes(x=gender_total, y=log(rt),color=morph_type)) +
geom_point(alpha=.5) +
geom_smooth(method = 'lm', size=1.2) +
facet_wrap(~trial_gender)
all_data %>% filter(rt<2000 & rt>10) %>%
ggplot(aes(x=morph_type, y=rt)) +
geom_boxplot()
agg_speaker_mean <- all_data %>%
group_by(morph_type,workerid) %>%
summarize(MeanRT=mean(rt))
all_data %>%
group_by(morph_type) %>%
summarize(MeanRT = mean(rt), CI.Low = ci.low(rt), CI.High = ci.high(rt)) %>%
mutate(YMin = MeanRT - CI.Low, YMax = MeanRT + CI.High) %>%
ggplot(aes(x=morph_type,y=MeanRT)) +
geom_col() +
geom_jitter(data = agg_speaker_mean, aes(y=MeanRT),alpha=.2,color='blue') +
geom_errorbar(aes(ymin=YMin,ymax=YMax), width=.25)
View(agg_speaker_mean)
