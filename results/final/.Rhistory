annotation_custom(text_low,xmin=-0.3,xmax=-0.3,ymin=1,ymax=1) +
coord_cartesian(clip = "off")
ggsave("norming_means_subsequent.png", width=7,height=4, path="/Users/branpap/Desktop/gender_processing/talks_and_papers/qp_paper/figures/")
ggplot(norming_means, aes(x=id, y=indi_mean, color=gender)) +
geom_point() +
theme_minimal() +
theme(axis.text.x = element_text(angle=45, hjust=1, size=8)) +
labs(x="Ungendered Lexical Item", y="Mean Rating", color = "Gender of Form Seen", title="Mean Gender Rating by Ungendered Form and Gender Seen") +
scale_color_manual(values = bran_palette) +
theme(plot.margin = unit(c(1,1,2,1), "lines")) +
annotation_custom(text_high,xmin=-1.3,xmax=-1.3,ymin=6.8,ymax=6.8) +
annotation_custom(text_low,xmin=-1,xmax=-1,ymin=1,ymax=1) +
coord_cartesian(clip = "off")
ggsave("norming_means_all.png", width=9,height=4, path="/Users/branpap/Desktop/gender_processing/talks_and_papers/qp_paper/figures/")
library(ggplot2)
library(gt)
library(webshot)
library(tidyverse)
library(lme4)
library(stringr)
library(languageR)
library(lmerTest)
library(reshape2)
library(grid)
source("helpers.R")
bran_palette = c("#7ae7e5", "#fe5f55", "#B2A6DE", "#14342b", "#69385c")
sec_palette = c("#3d405b","#e07a5f","#81b29a","f2cc8f")
theme_set(theme_minimal())
norm_stims <- read.csv("norm_stims.csv") %>%
mutate(Neutral = ifelse(Male == Neutral,"---",paste(Lexeme)))
norm_stims %>%
gt(rowname_col = "Lexeme") %>%
tab_stubhead(label="Lexeme") %>%
tab_header(
title="Norming Stimuli Items",
subtitle="Presented by lexeme & gendered forms"
) %>%
tab_spanner(
label = "Gendered Forms",
columns = c(Male,Female,Neutral)
)
norm_stims %>%
gt(rowname_col = "Lexeme") %>%
tab_stubhead(label="Lexeme") %>%
tab_header(
title="Norming Stimuli Items",
subtitle="Presented by lexeme & gendered forms"
) %>%
tab_spanner(
label = "Gendered Forms",
columns = c(Male,Female,Neutral)
) %>%
gtsave(
"norm_stims_table.png",
path="/Users/branpap/Desktop/gender_processing/talks_and_papers/qp_paper/figures/"
)
norming_data <- read.csv("norming_data.csv") %>%
filter(id!="example1") %>% # Will filter out non-critical trials, i.e. the example trial from the beginning of the experiment
mutate(equalized_response = ifelse(scale=="FM",8-response,response)) %>% # This will render all data points on the same scale, as participants randomly received either "very likely a man" or "very likely a woman" as the left end of their response scale, with the other appearing at the right end
mutate(orthog = ifelse(orthog=="sroceress","sorceress",orthog)) %>% # Fixes a typo
mutate(id = ifelse(id=="Stunt_double","Stunt double",id)) %>% # This, as well as all lines below it, convert compounds formed by spaces from their underscore forms to their spaced forms (e.g. police_officer -> Police officer)
mutate(id = ifelse(id=="Restaurant_server","Restaurant server",id)) %>%
mutate(id = ifelse(id=="Police_officer","Police officer",id)) %>%
mutate(id = ifelse(id=="Door_attendant","Door attendant",id)) %>%
mutate(id = ifelse(id=="Flight_attendant","Flight attendant",id)) %>%
mutate(id = ifelse(id=="Garbage_Collector","Garbage collector",id)) %>%
mutate(id = ifelse(id=="Mail_Carrier","Mail carrier",id)) %>%
mutate(id = ifelse(id=="Maintenance_Person","Maintenance person",id)) %>%
mutate(id = ifelse(id=="Paper_carrier","Paper carrier",id))
norming_exclusion <- norming_data %>%
filter(gender=="female") %>%
group_by(workerid) %>%
summarize(female_mean = mean(equalized_response)) %>%
unique() %>%
mutate(exclusion = female_mean < mean(female_mean) - 2*sd(female_mean)) %>%
filter(exclusion==TRUE)
norming_data <- norming_data[!(norming_data$workerid %in% norming_exclusion$workerid),]
norming_means <- norming_data %>%
group_by(id,gender,orthog) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n())
text_high <- textGrob("Female", gp=gpar(fontsize=10, fontface="bold"))
text_low <- textGrob("Male", gp=gpar(fontsize=10, fontface="bold"))
ggplot(norming_means, aes(x=id, y=indi_mean, color=gender)) +
geom_point() +
theme_minimal() +
theme(axis.text.x = element_text(angle=45, hjust=1, size=8)) +
labs(x="Ungendered Lexical Item", y="Mean Rating", color = "Gender of Form Seen", title="Mean Gender Rating by Ungendered Form and Gender Seen") +
scale_color_manual(values = sec_palette) +
theme(plot.margin = unit(c(1,1,2,1), "lines")) +
annotation_custom(text_high,xmin=-1.3,xmax=-1.3,ymin=6.8,ymax=6.8) +
annotation_custom(text_low,xmin=-1,xmax=-1,ymin=1,ymax=1) +
coord_cartesian(clip = "off")
ggsave("norming-means-all.png", width=9,height=4, path="/Users/branpap/Desktop/gender_processing/talks_and_papers/qp_paper/figures/")
later_criticals <- c("Actor","Anchor","Businessperson","Camera operator","Congressperson","Craftsperson","Crewmember","Firefighter","Flight attendant","Foreperson","Heir","Hero","Host","Hunter","Layperson","Meteorologist","Police officer","Salesperson","Stunt double","Villain")
critical_means <- norming_means[(norming_means$id %in% later_criticals),]
critical_means %>%
ggplot(aes(x=id, y=indi_mean, color=gender)) +
geom_point() +
theme_minimal() +
theme(axis.text.x = element_text(angle=45, hjust=1, size=8)) +
labs(x="Ungendered Lexical Item", y="Mean Rating", color = "Gender of Form Seen", title="Mean Gender Rating by Ungendered Form and Gender Seen") +
scale_color_manual(values = bran_palette) +
theme(plot.margin = unit(c(1,1,2,1), "lines")) +
annotation_custom(text_high,xmin=-0.3,xmax=-0.3,ymin=6.8,ymax=6.8) +
annotation_custom(text_low,xmin=-0.3,xmax=-0.3,ymin=1,ymax=1) +
coord_cartesian(clip = "off")
ggsave("norming_means_subsequent.png", width=7,height=4, path="/Users/branpap/Desktop/gender_processing/talks_and_papers/qp_paper/figures/")
ggplot(norming_means, aes(x=id, y=indi_mean, color=gender)) +
geom_point() +
theme_minimal() +
theme(axis.text.x = element_text(angle=45, hjust=1, size=8)) +
labs(x="Ungendered Lexical Item", y="Mean Rating", color = "Gender of Form Seen", title="Mean Gender Rating by Ungendered Form and Gender Seen") +
scale_color_manual(values = sec_palette, limits=c("male","female","neutral")) +
theme(plot.margin = unit(c(1,1,2,1), "lines")) +
annotation_custom(text_high,xmin=-1.3,xmax=-1.3,ymin=6.8,ymax=6.8) +
annotation_custom(text_low,xmin=-1,xmax=-1,ymin=1,ymax=1) +
coord_cartesian(clip = "off")
ggplot(norming_means, aes(x=id, y=indi_mean, color=gender)) +
geom_point() +
theme_minimal() +
theme(axis.text.x = element_text(angle=45, hjust=1, size=8)) +
labs(x="Ungendered Lexical Item", y="Mean Rating", color = "Gender of Form Seen") +
scale_color_manual(values = sec_palette, limits=c("male","female","neutral")) +
theme(plot.margin = unit(c(1,1,2,1), "lines")) +
annotation_custom(text_high,xmin=-1.3,xmax=-1.3,ymin=6.8,ymax=6.8) +
annotation_custom(text_low,xmin=-1,xmax=-1,ymin=1,ymax=1) +
coord_cartesian(clip = "off") +
theme(legend.position = "top")
ggsave("norming-means-all.png", width=9,height=4, path="/Users/branpap/Desktop/gender_processing/talks_and_papers/qp_paper/figures/")
ggsave("norming-means-all.png", width=9,height=4, path="/Users/branpap/Desktop/gender_processing/talks_and_papers/qp_paper/figures/")
ggsave("norming-means-all.png", width=9,height=4, path="/Users/branpap/Desktop/gender_ideology/talks_and_papers/qp_paper/figures/")
ggsave("norming-means-all.png", width=7,height=4, path="/Users/branpap/Desktop/gender_ideology/talks_and_papers/qp_paper/figures/")
library(ggplot2)
library(gt)
library(webshot)
library(tidyverse)
library(lme4)
library(stringr)
library(languageR)
library(lmerTest)
library(reshape2)
library(grid)
source("helpers.R")
bran_palette = c("#7ae7e5", "#fe5f55", "#B2A6DE", "#14342b", "#69385c")
sec_palette = c("#3d405b","#e07a5f","#81b29a","f2cc8f")
theme_set(theme_minimal())
norm_stims <- read.csv("norm_stims.csv") %>%
mutate(Neutral = ifelse(Male == Neutral,"---",paste(Lexeme)))
norm_stims %>%
gt(rowname_col = "Lexeme") %>%
tab_stubhead(label="Lexeme") %>%
tab_header(
title="Norming Stimuli Items",
subtitle="Presented by lexeme & gendered forms"
) %>%
tab_spanner(
label = "Gendered Forms",
columns = c(Male,Female,Neutral)
)
norming_means <- norming_data %>%
group_by(id,gender,orthog) %>%
summarise(indi_mean = mean(equalized_response),
trial_count=n(),
CI.Low = ci.low(indi_mean),
CI.High = ci.high(indi_mean)
)
ggplot(norming_means, aes(x=id, y=indi_mean, color=gender)) +
geom_point() +
geom_errorbar(aes(ymin = YMin, ymax=YMax),
position = dodge,
width=0.25) +
theme_minimal() +
theme(axis.text.x = element_text(angle=45, hjust=1, size=8)) +
labs(x="Ungendered Lexical Item", y="Mean Rating", color = "Gender of Form Seen") +
scale_color_manual(values = sec_palette, limits=c("male","female","neutral")) +
theme(plot.margin = unit(c(1,1,2,1), "lines")) +
annotation_custom(text_high,xmin=-1.3,xmax=-1.3,ymin=6.8,ymax=6.8) +
annotation_custom(text_low,xmin=-1,xmax=-1,ymin=1,ymax=1) +
coord_cartesian(clip = "off") +
theme(legend.position = "top")
library(ggplot2)
library(gt)
library(webshot)
library(tidyverse)
library(lme4)
library(stringr)
library(languageR)
library(lmerTest)
library(reshape2)
library(grid)
source("helpers.R")
bran_palette = c("#7ae7e5", "#fe5f55", "#B2A6DE", "#14342b", "#69385c")
sec_palette = c("#3d405b","#e07a5f","#81b29a","f2cc8f")
theme_set(theme_minimal())
norm_stims <- read.csv("norm_stims.csv") %>%
mutate(Neutral = ifelse(Male == Neutral,"---",paste(Lexeme)))
norm_stims %>%
gt(rowname_col = "Lexeme") %>%
tab_stubhead(label="Lexeme") %>%
tab_header(
title="Norming Stimuli Items",
subtitle="Presented by lexeme & gendered forms"
) %>%
tab_spanner(
label = "Gendered Forms",
columns = c(Male,Female,Neutral)
)
norm_stims %>%
gt(rowname_col = "Lexeme") %>%
tab_stubhead(label="Lexeme") %>%
tab_header(
title="Norming Stimuli Items",
subtitle="Presented by lexeme & gendered forms"
) %>%
tab_spanner(
label = "Gendered Forms",
columns = c(Male,Female,Neutral)
) %>%
gtsave(
"norm_stims_table.png",
path="/Users/branpap/Desktop/gender_processing/talks_and_papers/qp_paper/figures/"
)
norming_data <- read.csv("norming_data.csv") %>%
filter(id!="example1") %>% # Will filter out non-critical trials, i.e. the example trial from the beginning of the experiment
mutate(equalized_response = ifelse(scale=="FM",8-response,response)) %>% # This will render all data points on the same scale, as participants randomly received either "very likely a man" or "very likely a woman" as the left end of their response scale, with the other appearing at the right end
mutate(orthog = ifelse(orthog=="sroceress","sorceress",orthog)) %>% # Fixes a typo
mutate(id = ifelse(id=="Stunt_double","Stunt double",id)) %>% # This, as well as all lines below it, convert compounds formed by spaces from their underscore forms to their spaced forms (e.g. police_officer -> Police officer)
mutate(id = ifelse(id=="Restaurant_server","Restaurant server",id)) %>%
mutate(id = ifelse(id=="Police_officer","Police officer",id)) %>%
mutate(id = ifelse(id=="Door_attendant","Door attendant",id)) %>%
mutate(id = ifelse(id=="Flight_attendant","Flight attendant",id)) %>%
mutate(id = ifelse(id=="Garbage_Collector","Garbage collector",id)) %>%
mutate(id = ifelse(id=="Mail_Carrier","Mail carrier",id)) %>%
mutate(id = ifelse(id=="Maintenance_Person","Maintenance person",id)) %>%
mutate(id = ifelse(id=="Paper_carrier","Paper carrier",id))
norming_exclusion <- norming_data %>%
filter(gender=="female") %>%
group_by(workerid) %>%
summarize(female_mean = mean(equalized_response)) %>%
unique() %>%
mutate(exclusion = female_mean < mean(female_mean) - 2*sd(female_mean)) %>%
filter(exclusion==TRUE)
norming_data <- norming_data[!(norming_data$workerid %in% norming_exclusion$workerid),]
norming_means <- norming_data %>%
group_by(id,gender,orthog) %>%
summarise(indi_mean = mean(equalized_response),
trial_count=n(),
CI.Low = ci.low(indi_mean),
CI.High = ci.high(indi_mean)
) %>%
mutate(YMin = indi_mean - CI.Low,
YMax = indi_mean + CI.High)
text_high <- textGrob("Female", gp=gpar(fontsize=10, fontface="bold"))
text_low <- textGrob("Male", gp=gpar(fontsize=10, fontface="bold"))
ggplot(norming_means, aes(x=id, y=indi_mean, color=gender)) +
geom_point() +
geom_errorbar(aes(ymin = YMin, ymax=YMax),
position = dodge,
width=0.25) +
theme_minimal() +
theme(axis.text.x = element_text(angle=45, hjust=1, size=8)) +
labs(x="Ungendered Lexical Item", y="Mean Rating", color = "Gender of Form Seen") +
scale_color_manual(values = sec_palette, limits=c("male","female","neutral")) +
theme(plot.margin = unit(c(1,1,2,1), "lines")) +
annotation_custom(text_high,xmin=-1.3,xmax=-1.3,ymin=6.8,ymax=6.8) +
annotation_custom(text_low,xmin=-1,xmax=-1,ymin=1,ymax=1) +
coord_cartesian(clip = "off") +
theme(legend.position = "top")
dodge = position_dodge(0.9)
ggplot(norming_means, aes(x=id, y=indi_mean, color=gender)) +
geom_point() +
geom_errorbar(aes(ymin = YMin, ymax=YMax),
position = dodge,
width=0.25) +
theme_minimal() +
theme(axis.text.x = element_text(angle=45, hjust=1, size=8)) +
labs(x="Ungendered Lexical Item", y="Mean Rating", color = "Gender of Form Seen") +
scale_color_manual(values = sec_palette, limits=c("male","female","neutral")) +
theme(plot.margin = unit(c(1,1,2,1), "lines")) +
annotation_custom(text_high,xmin=-1.3,xmax=-1.3,ymin=6.8,ymax=6.8) +
annotation_custom(text_low,xmin=-1,xmax=-1,ymin=1,ymax=1) +
coord_cartesian(clip = "off") +
theme(legend.position = "top")
View(norming_means)
norming_means <- norming_data %>%
group_by(id,gender,orthog) %>%
summarise(indi_mean = mean(equalized_response),
trial_count=n(),
CI.Low = ci.low(equalized_response),
CI.High = ci.high(equalized_response)
) %>%
mutate(YMin = indi_mean - CI.Low,
YMax = indi_mean + CI.High)
ggplot(norming_means, aes(x=id, y=indi_mean, color=gender)) +
geom_point() +
geom_errorbar(aes(ymin = YMin, ymax=YMax),
position = dodge,
width=0.25) +
theme_minimal() +
theme(axis.text.x = element_text(angle=45, hjust=1, size=8)) +
labs(x="Ungendered Lexical Item", y="Mean Rating", color = "Gender of Form Seen") +
scale_color_manual(values = sec_palette, limits=c("male","female","neutral")) +
theme(plot.margin = unit(c(1,1,2,1), "lines")) +
annotation_custom(text_high,xmin=-1.3,xmax=-1.3,ymin=6.8,ymax=6.8) +
annotation_custom(text_low,xmin=-1,xmax=-1,ymin=1,ymax=1) +
coord_cartesian(clip = "off") +
theme(legend.position = "top")
ggplot(norming_means, aes(x=id, y=indi_mean, color=gender)) +
geom_point() +
geom_errorbar(aes(ymin = YMin, ymax=YMax),
width=0.25) +
theme_minimal() +
theme(axis.text.x = element_text(angle=45, hjust=1, size=8)) +
labs(x="Ungendered Lexical Item", y="Mean Rating", color = "Gender of Form Seen") +
scale_color_manual(values = sec_palette, limits=c("male","female","neutral")) +
theme(plot.margin = unit(c(1,1,2,1), "lines")) +
annotation_custom(text_high,xmin=-1.3,xmax=-1.3,ymin=6.8,ymax=6.8) +
annotation_custom(text_low,xmin=-1,xmax=-1,ymin=1,ymax=1) +
coord_cartesian(clip = "off") +
theme(legend.position = "top")
prod_comments <- final_prod %>%
group_by(workerid) %>%
mutate(comments = paste(unique(subject_information.comments)))
prod_comments <- final_prod %>%
group_by(workerid) %>%
mutate(comments = paste(unique(subject_information.comments)))
library(ggplot2)
library(tidyverse)
library(lme4)
library(stringr)
library(languageR)
library(lmerTest)
library(reshape2)
library(grid)
source("helpers.R")
library(ggplot2)
library(tidyverse)
library(lme4)
library(stringr)
library(languageR)
library(lmerTest)
library(reshape2)
library(grid)
source("helpers.R")
bran_palette = c("#7ae7e5", "#fe5f55", "#B2A6DE", "#14342b", "#69385c")
sec_palette = c("#3d405b","#e07a5f","#81b29a","f2cc8f")
theme_set(theme_minimal())
dodge = position_dodge(0.9)
frequency <- read.csv("freq_vals.csv")
lib_cols <- c('ABC','CNN','PBS','NBC','MSNBC','NPR','CBS')
non_inds <- c('ABC','CNN','PBS','NBC','MSNBC','NPR','CBS','FOX')
frequency <- frequency %>%
mutate(total_left = rowSums(frequency[lib_cols])) %>%
mutate(total_right = FOX) %>%
mutate(all_wpm = ((total_left + total_right) / 121500000) * 1000000) %>%
mutate(left_wpm = (total_left/109300000) * 1000000) %>%
mutate(right_wpm = (total_right/12200000) * 1000000) %>%
mutate(neutral_binary = ifelse(gender=="neutral",1,0)) %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption')) %>%
rename(form = word) %>%
mutate(freq_gender = ifelse(form == "actress" | form == "anchorwoman" | form == "stewardess" | form == "businesswoman" | form == 'camerawoman' | form == 'congresswoman' | form == 'craftswoman' | form == 'crewwoman' | form == 'firewoman' | form == 'forewoman'  | form == 'heiress' | form == 'heroine' | form == 'hostess' | form == 'huntress' | form == 'laywoman' | form == 'policewoman' | form == 'saleswoman' | form == 'stuntwoman' | form == 'villainess' | form == 'weatherwoman',"female",ifelse(form == "anchor" | form == "flight attendant" | form == "businessperson" | form == 'camera operator' | form == 'congressperson' | form == 'craftsperson' | form == 'crewmember' | form == 'firefighter' | form == 'foreperson' | form == 'layperson' | form == 'police officer' | form == 'salesperson' | form == 'stunt double' | form == 'meteorologist',"neutral",ifelse(form == "anchorman" | form == "steward" | form == "businessman" | form == 'cameraman' | form == 'congressman' | form == 'craftsman' | form == 'crewman' | form == 'fireman' | form == 'foreman' | form == 'layman' | form == 'policeman' | form == 'salesman' | form == 'stuntman' | form == 'weatherman',"male",'neutral'))))
frequency[frequency == 0.00000000] <- 0.0001
frequency <- frequency %>%
mutate(log_right = log(right_wpm), log_left = log(left_wpm), log_all = log(all_wpm))
frequency <- subset(frequency, select = -c(ABC,CNN,PBS,NBC,MSNBC,NPR,CBS,FOX))
# All Media Sources (left and right)
freq_all <- frequency %>%
select(lexeme,freq_gender,all_wpm) %>%
pivot_wider(names_from = freq_gender,values_from = all_wpm,names_prefix="all_wpm_")
# Right-wing media only
freq_right <- frequency %>%
select(lexeme,freq_gender,right_wpm) %>%
pivot_wider(names_from = freq_gender,values_from = right_wpm,names_prefix="right_wpm_")
# left wing media only
freq_left <- frequency %>%
select(lexeme,freq_gender,left_wpm) %>%
pivot_wider(names_from = freq_gender,values_from = left_wpm,names_prefix="left_wpm_")
net_lex <- left_join(freq_all,freq_right,by="lexeme")
net_lex <- left_join(net_lex,freq_left,by="lexeme")
net_lex <- net_lex %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption')) %>%
mutate(
fem_odds = log(all_wpm_neutral / all_wpm_female),
male_odds = case_when(
morph_type == "adoption" ~ log(all_wpm_neutral / all_wpm_neutral),
morph_type == "compound" ~ log(all_wpm_neutral / all_wpm_male)
)
)
net_lex <- net_lex %>%
select(lexeme,fem_odds,male_odds)
prod_data <- read.csv("production_data.csv")
prod_exclusion <- prod_data %>%
filter(name=='attention') %>%
group_by(workerid) %>%
summarise(accuracy = mean(correct)) %>%
mutate(exclude = ifelse(accuracy < 0.80,'Yes','No')) %>%
filter(exclude == "Yes")
gender_transcendence_cols <- c('subject_information.gender_q1','subject_information.gender_q2','subject_information.gender_q3','subject_information.gender_q4','subject_information.gender_q5')
gender_linked_cols <- c('subject_information.gender_q6','subject_information.gender_q7','subject_information.gender_q8','subject_information.gender_q9','subject_information.gender_q10','subject_information.gender_q11','subject_information.gender_q12','subject_information.gender_q13')
prod_data <- prod_data %>%
mutate(gender_trans = 100 - (rowMeans(prod_data[gender_transcendence_cols]))) %>%
mutate(gender_link = rowMeans(prod_data[gender_linked_cols]))
gender_all = c('gender_trans','gender_link')
prod_data <- prod_data %>%
mutate(gender_total = rowMeans(prod_data[gender_all]))
prod_data <- prod_data %>%
filter(type == "critical") %>%
mutate(response_gender = ifelse(response == "actress" | response == "anchorwoman" | response == "stewardess" | response == "businesswoman" | response == 'camerawoman' | response == 'congresswoman' | response == 'craftswoman' | response == 'crewwoman' | response == 'firewoman' | response == 'forewoman'  | response == 'heiress' | response == 'heroine' | response == 'hostess' | response == 'huntress' | response == 'laywoman' | response == 'policewoman' | response == 'saleswoman' | response == 'stuntwoman' | response == 'villainess' | response == 'weatherwoman',"female",ifelse(response == "anchor" | response == "flight attendant" | response == "businessperson" | response == 'camera operator' | response == 'congressperson' | response == 'craftsperson' | response == 'crewmember' | response == 'firefighter' | response == 'foreperson' | response == 'layperson' | response == 'police officer' | response == 'salesperson' | response == 'stunt double' | response == 'meteorologist',"neutral",ifelse(response == "anchorman" | response == "steward" | response == "businessman" | response == 'cameraman' | response == 'congressman' | response == 'craftsman' | response == 'crewman' | response == 'fireman' | response == 'foreman' | response == 'layman' | response == 'policeman' | response == 'salesman' | response == 'stuntman' | response == 'weatherman',"male",'neutral')))) %>%
mutate(congruency = ifelse(gender == response_gender,"true","false")) %>%
mutate(incongruent = ifelse(gender == "male" & response_gender == "female","incongruent_mtf",ifelse(gender == "female" & response_gender == "male","incongruent_ftm","real"))) %>%
mutate(neutrality = ifelse(response_gender == "neutral","true","false"))%>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption')) %>%
mutate(poli_party = ifelse(subject_information.party_alignment == 1 | subject_information.party_alignment == 2,'Republican',ifelse(subject_information.party_alignment == 4 | subject_information.party_alignment == 5,'Democrat','Non-Partisan'))) %>%
mutate(response_neutral = ifelse(response_gender == "neutral",1,0)) %>%
mutate(young_old = ifelse(subject_information.age > 40,"old","young")) %>%
rename(form = response) %>%
filter(!is.na(subject_information.age)) %>%
filter(!is.na(poli_party))
final_prod <- left_join(prod_data,net_lex,by="lexeme")
final_prod <- subset(final_prod, select = -c(error,subject_information.asses,subject_information.enjoyment,subject_information.gender_q1,subject_information.gender_q2,subject_information.gender_q3,subject_information.gender_q4,subject_information.gender_q5,subject_information.gender_q6,subject_information.gender_q7,subject_information.gender_q8,subject_information.gender_q9,subject_information.gender_q10,subject_information.gender_q11,subject_information.gender_q12,subject_information.gender_q13))
final_prod <- final_prod %>%
mutate(log_odds = case_when(
gender == "male" ~ male_odds,
gender == "female" ~ fem_odds
)) %>%
mutate(c_gender_total = scale(gender_total,scale=FALSE)) %>%
mutate(poli_party = factor(poli_party,ordered = FALSE)) %>%
mutate(trial_gender = factor(gender,ordered = FALSE)) %>%
mutate(c_trial_gender = scale(as.numeric(trial_gender),scale=FALSE)) %>%
mutate(c_age = scale(subject_information.age, scale=FALSE)) %>%
mutate(c_log_odds = scale(log_odds, scale=TRUE))
prod_all <- final_prod
final_prod <- final_prod %>%
filter(incongruent == "real")
final_prod$trial_gender = relevel(final_prod$trial_gender, ref="male")
dems <- final_prod %>%
filter(poli_party == "Democrat")
dem_model <- glmer(as.factor(response_neutral)~c_trial_gender*c_gender_total + c_log_odds + (1|workerid) + (1|lexeme),data=dems,family="binomial")
summary(dem_model)
reps <- final_prod %>%
filter(poli_party == "Republican")
rep_model <- glmer(as.factor(response_neutral)~c_trial_gender*c_gender_total + c_log_odds + (1|workerid) + (1|lexeme),data=reps,family = "binomial")
summary(rep_model)
inds <- final_prod %>%
filter(poli_party == "Non-Partisan")
ind_model <- glmer(response_neutral~c_trial_gender*c_gender_total + c_log_odds + (1|workerid) + (1|lexeme),data=inds, family="binomial")
summary(ind_model)
base <- prod_all %>%
mutate(response_gender = case_when(
response_gender == "male/neutral" ~ "neutral",
TRUE ~ response_gender
)) %>%
select(workerid,gender,response_gender) %>%
rename(trial_gender = gender) %>%
mutate(trial_gender = as.factor(trial_gender),
response_gender = as.factor(response_gender))
prod_to_expand <- prod_all %>%
mutate(response_gender = case_when(
response_gender == "male/neutral" ~ "neutral",
TRUE ~ response_gender
)) %>%
select(workerid,gender,response_gender,gender_total,poli_party) %>%
mutate(ideology = cut_number(gender_total,n=3,labels=c("progressive","moderate","conservative"))) %>%
rename(trial_gender = gender) %>%
mutate(trial_gender = as.factor(trial_gender),
response_gender = as.factor(response_gender))
expanded_prod <- prod_to_expand %>%
mutate(id = as.factor(row_number())) %>%
expand_grid(c("male","female","neutral"),base$id) %>%
rename(response_old = response_gender)
colnames(expanded_prod)[8] <- "response_gender"
expanded_prod <- expanded_prod %>%
group_by(id) %>%
mutate(response = case_when(response_gender == response_old ~ 1,TRUE ~ 0)) %>%
select(-response_old)
expanded_prod %>%
group_by(response_gender,trial_gender,ideology,poli_party) %>%
summarize(proportion = mean(response),
CI.Low = ci.low(response),
CI.High = ci.high(response),
obs = n(),
participants = n_distinct(workerid)) %>%
ungroup() %>%
mutate(YMin = proportion - CI.Low,
YMax = proportion + CI.High) %>%
ggplot(aes(x=ideology,
y=proportion,
fill=response_gender,
alpha=as.numeric(participants))) +
geom_bar(stat="identity",
position = dodge) +
geom_errorbar(aes(ymin = YMin, ymax=YMax),
position = dodge,
width=0.25) +
facet_grid(poli_party~trial_gender) +
scale_fill_manual(values = sec_palette, limits=c("male","female","neutral")) +
scale_alpha(range=c(0.4,1)) +
labs(y="Proportion of Responses",x="Gender Ideology", fill="Response Form Gender",alpha = "# of Participants") +
theme(text=element_text(size=14)) +
theme(axis.text.x = element_text(angle=20, vjust=.8)) +
theme(legend.position = "top", legend.text = element_text(size=10), legend.title = element_text(size=10))
final_prod %>%
group_by(trial_gender) %>%
summarise(mean_neutral = mean(response_neutral))
final_prod %>%
group_by(poli_party) %>%
summarise(mean_neutral = mean(response_neutral))
cor(frequency$log_right,frequency$log_left)
prod_comments <- final_prod %>%
group_by(workerid) %>%
mutate(comments = paste(unique(subject_information.comments)))
unique(final_prod$subject_information.comments)
