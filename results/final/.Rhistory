mutate(response_gender = case_when(
response_gender == "male/neutral" ~ "neutral",
TRUE ~ response_gender
)) %>%
select(workerid,gender,response_gender,subject_information.party_alignment) %>%
rename(trial_gender = gender) %>%
mutate(trial_gender = as.factor(trial_gender),
response_gender = as.factor(response_gender))
test_d <- test %>%
mutate(id = as.factor(row_number())) %>%
expand_grid(c("male","female","neutral"),test$id) %>%
rename(response_old = response_gender)
colnames(test_d)[6] <- "response_gender"
test_d <- test_d %>%
group_by(id) %>%
mutate(response = case_when(response_gender == response_old ~ 1,TRUE ~ 0)) %>%
select(-response_old)
dodge = position_dodge(0.9)
blah <- test_d %>%
group_by(response_gender,trial_gender,subject_information.party_alignment) %>%
summarise(participants = n_distinct(workerid))
test_d %>%
group_by(response_gender,trial_gender,subject_information.party_alignment) %>%
summarize(proportion = mean(response),
CI.Low = ci.low(response),
CI.High = ci.high(response),
obs = n(),
participants = n_distinct(workerid)) %>%
rename(party_alignment = subject_information.party_alignment) %>%
ungroup() %>%
mutate(YMin = proportion - CI.Low,
YMax = proportion + CI.High) %>%
ggplot(aes(x=party_alignment,
y=proportion,
fill=response_gender,
alpha = participants)) +
geom_bar(stat="identity",
position = dodge) +
geom_errorbar(aes(ymin = YMin, ymax=YMax),
position = dodge,
width=0.25) +
facet_wrap(~trial_gender) +
scale_fill_manual(values = bran_palette) +
scale_alpha(range=c(0.4,1)) +
labs(y="Proportion of Responses",x="<-- Republican           Participant Party Alignment           Democrat -->", fill="Response Form Gender", alpha="# of Participants")
test_2 <- prod_all %>%
mutate(response_gender = case_when(
response_gender == "male/neutral" ~ "neutral",
TRUE ~ response_gender
)) %>%
select(workerid,gender,response_gender,gender_total,poli_party) %>%
mutate(ideology = cut_number(gender_total,n=3,labels=c("progressive","moderate","conservative"))) %>%
rename(trial_gender = gender) %>%
mutate(trial_gender = as.factor(trial_gender),
response_gender = as.factor(response_gender))
test_e <- test_2 %>%
mutate(id = as.factor(row_number())) %>%
expand_grid(c("male","female","neutral"),test$id) %>%
rename(response_old = response_gender)
colnames(test_e)[8] <- "response_gender"
test_e <- test_e %>%
group_by(id) %>%
mutate(response = case_when(response_gender == response_old ~ 1,TRUE ~ 0)) %>%
select(-response_old)
blah2<- test_e %>%
group_by(response_gender,trial_gender,ideology,poli_party) %>%
summarise(participants = n_distinct(workerid))
test_e %>%
group_by(response_gender,trial_gender,ideology,poli_party) %>%
summarize(proportion = mean(response),
CI.Low = ci.low(response),
CI.High = ci.high(response),
obs = n(),
participants = n_distinct(workerid)) %>%
ungroup() %>%
mutate(YMin = proportion - CI.Low,
YMax = proportion + CI.High) %>%
ggplot(aes(x=ideology,
y=proportion,
fill=response_gender,
alpha=as.numeric(participants))) +
geom_bar(stat="identity",
position = dodge) +
geom_errorbar(aes(ymin = YMin, ymax=YMax),
position = dodge,
width=0.25) +
facet_grid(poli_party~trial_gender) +
scale_fill_manual(values = bran_palette) +
scale_alpha(range=c(0.4,1)) +
labs(y="Proportion of Responses",x="Gender Ideology", fill="Response Form Gender",alpha = "# of Participants") +
theme(text=element_text(size=14)) +
theme(axis.text.x = element_text(angle=20, vjust=.8))
# +
#  scale_x_discrete(sec.axis = sec_axis(~ . , name = "Gender Seen", breaks = NULL))
incongruent <- prod_all %>%
filter(incongruent == "incongruent_ftm" | incongruent == "incongruent_mtf")
library(ggplot2)
library(tidyverse)
library(lme4)
library(stringr)
library(languageR)
library(lmerTest)
library(reshape2)
library(grid)
source("helpers.R")
bran_palette = c("#7ae7e5", "#fe5f55", "#B2A6DE", "#14342b", "#69385c")
theme_set(theme_minimal())
frequency <- read.csv("freq_vals.csv")
lib_cols <- c('ABC','CNN','PBS','NBC','MSNBC','NPR','CBS')
frequency <- frequency %>%
mutate(total_left = rowSums(frequency[lib_cols])) %>%
mutate(total_right = FOX) %>%
mutate(all_wpm = ((total_left + total_right) / 121500000) * 1000000) %>%
mutate(left_wpm = (total_left/109300000) * 1000000) %>%
mutate(right_wpm = (total_right/12200000) * 1000000) %>%
mutate(neutral_binary = ifelse(gender=="neutral",1,0)) %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption')) %>%
rename(form = word)
non_inds <- c('ABC','CNN','PBS','NBC','MSNBC','NPR','CBS','FOX')
test_freq <- read.csv("freq_vals.csv")
test_freq <- test_freq %>%
mutate(total = rowSums(test_freq[non_inds]))
test_freq[test_freq == 0.00000000] <- 0.0001
test_freq <- test_freq %>%
mutate(total_wpm = (total/121500000) * 1000000) %>%
mutate(log_total = log(total_wpm))
frequency %>%
group_by(lexeme)
frequency[frequency == 0.00000000] <- 0.0001
frequency <- frequency %>%
mutate(log_right = log(right_wpm), log_left = log(left_wpm), log_all = log(all_wpm))
frequency <- frequency %>%
mutate(media_diff = log_left - log_right) %>%
mutate(nonexistent = ifelse(media_diff == 0 & log_left < -4,"true","false")) %>%
mutate(freq_gender = ifelse(form == "actress" | form == "anchorwoman" | form == "stewardess" | form == "businesswoman" | form == 'camerawoman' | form == 'congresswoman' | form == 'craftswoman' | form == 'crewwoman' | form == 'firewoman' | form == 'forewoman'  | form == 'heiress' | form == 'heroine' | form == 'hostess' | form == 'huntress' | form == 'laywoman' | form == 'policewoman' | form == 'saleswoman' | form == 'stuntwoman' | form == 'villainess' | form == 'weatherwoman',"female",ifelse(form == "anchor" | form == "flight attendant" | form == "businessperson" | form == 'camera operator' | form == 'congressperson' | form == 'craftsperson' | form == 'crewmember' | form == 'firefighter' | form == 'foreperson' | form == 'layperson' | form == 'police officer' | form == 'salesperson' | form == 'stunt double' | form == 'meteorologist',"neutral",ifelse(form == "anchorman" | form == "steward" | form == "businessman" | form == 'cameraman' | form == 'congressman' | form == 'craftsman' | form == 'crewman' | form == 'fireman' | form == 'foreman' | form == 'layman' | form == 'policeman' | form == 'salesman' | form == 'stuntman' | form == 'weatherman',"male",'neutral'))))
frequency <- subset(frequency, select = -c(ABC,CNN,PBS,NBC,MSNBC,NPR,CBS,FOX))
freq_log_all <- frequency %>%
select(lexeme,freq_gender,log_all) %>%
pivot_wider(names_from = freq_gender,values_from = log_all,names_prefix="log_all_")
freq_log_right <- frequency %>%
select(lexeme,freq_gender,log_right) %>%
pivot_wider(names_from = freq_gender,values_from = log_right,names_prefix="log_right_")
freq_log_left <- frequency %>%
select(lexeme,freq_gender,log_left) %>%
pivot_wider(names_from = freq_gender,values_from = log_left,names_prefix="log_left_")
freq_lex <- left_join(freq_log_all,freq_log_right,by="lexeme")
freq_lex <- left_join(freq_lex,freq_log_left,by="lexeme")
freq_all <- frequency %>%
select(lexeme,freq_gender,all_wpm) %>%
pivot_wider(names_from = freq_gender,values_from = all_wpm,names_prefix="all_wpm_")
freq_right <- frequency %>%
select(lexeme,freq_gender,right_wpm) %>%
pivot_wider(names_from = freq_gender,values_from = right_wpm,names_prefix="right_wpm_")
freq_left <- frequency %>%
select(lexeme,freq_gender,left_wpm) %>%
pivot_wider(names_from = freq_gender,values_from = left_wpm,names_prefix="left_wpm_")
net_lex <- left_join(freq_all,freq_right,by="lexeme")
net_lex <- left_join(net_lex,freq_left,by="lexeme")
net_lex <- net_lex %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption')) %>%
mutate(
fem_odds = all_wpm_neutral / all_wpm_female,
male_odds = case_when(
morph_type == "adoption" ~ log(all_wpm_neutral / all_wpm_neutral),
morph_type == "compound" ~ log(all_wpm_neutral / all_wpm_male)
)
)
freq_lex <- freq_lex %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption')) %>%
mutate(
rel_fem_odds = log_all_neutral / log_all_female,
rel_male_odds = case_when(
morph_type == "adoption" ~ log_all_neutral / log_all_neutral,
morph_type == "compound" ~ log_all_neutral / log_all_male
)
)
norming_data <- read.csv("norming_data.csv") %>%
filter(id!="example1") %>% # Will filter out non-critical trials, i.e. the example trial from the beginning of the experiment
mutate(equalized_response = ifelse(scale=="FM",8-response,response)) %>% # This will render all data points on the same scale, as participants randomly received either "very likely a man" or "very likely a woman" as the left end of their response scale, with the other appearing at the right end
mutate(orthog = ifelse(orthog=="sroceress","sorceress",orthog)) %>% # Fixes a typo
mutate(id = ifelse(id=="Stunt_double","stunt double",id)) %>% # This, as well as all lines below it, convert compounds formed by spaces from their underscore forms to their spaced forms (e.g. police_officer -> Police officer)
mutate(id = ifelse(id=="Police_officer","police officer",id)) %>%
mutate(id = ifelse(id=="Flight_attendant","flight attendant",id)) %>%
mutate(id = ifelse(id=="Anchor","anchor",id)) %>%
mutate(id = ifelse(id=="Businessperson","businessperson",id)) %>%
mutate(id = ifelse(id=="Camera","camera operator",id)) %>%
mutate(id = ifelse(id=="Congressperson","congressperson",id)) %>%
mutate(id = ifelse(id=="Craftsperson","craftsperson",id)) %>%
mutate(id = ifelse(id=="Crewmember","crewmember",id)) %>%
mutate(id = ifelse(id=="Firefighter","firefighter",id)) %>%
mutate(id = ifelse(id=="Foreperson","foreperson",id)) %>%
mutate(id = ifelse(id=="Layperson","layperson",id)) %>%
mutate(id = ifelse(id=="Meteorologist","meteorologist",id)) %>%
mutate(id = ifelse(id=="Salesperson","salesperson",id)) %>%
mutate(id = ifelse(id=="Actor","actor",id)) %>%
mutate(id = ifelse(id=="Heir","heir",id)) %>%
mutate(id = ifelse(id=="Hero","hero",id)) %>%
mutate(id = ifelse(id=="Host","host",id)) %>%
mutate(id = ifelse(id=="Hunter","hunter",id)) %>%
mutate(id = ifelse(id=="Villain","villain",id)) %>%
mutate(orthog = ifelse(orthog=="airline steward","steward",orthog)) %>%
mutate(orthog = ifelse(orthog=="airline stewardess","stewardess",orthog))
norming_exclusion <- norming_data %>%
filter(gender=="female") %>%
group_by(workerid) %>%
summarize(female_mean = mean(equalized_response)) %>%
unique() %>%
mutate(exclusion = female_mean < mean(female_mean) - 2*sd(female_mean)) %>%
filter(exclusion==TRUE)
norming_data <- norming_data[!(norming_data$workerid %in% norming_exclusion$workerid),]
norming_means <- norming_data %>%
filter(neutral_morh !="male_adoption") %>%
group_by(orthog,id) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
rename(form = orthog) %>%
rename(lexeme =id)
norming_adoptions <- norming_data %>%
filter(neutral_morh == "male_adoption") %>%
group_by(orthog) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
mutate(lexeme = ifelse(orthog=="actress","actor",ifelse(orthog=="heiress","heir",ifelse(orthog=="heroine","hero",ifelse(orthog=="hostess","host",ifelse(orthog=="huntress","hunter",ifelse(orthog=="villainess","villain",orthog))))))) %>%
rename(form = orthog)
norming_adoptions <- norming_adoptions[, c("lexeme", "form", "indi_mean", "trial_count")]
norming_means <- rbind(norming_means,norming_adoptions) %>%
rename(lexeme_norm = lexeme)
later_criticals <- c("actor","anchor","businessperson","camera operator","congressperson","craftsperson","crewmember","firefighter","flight attendant","foreperson","heir","hero","host","hunter","layperson","meteorologist","police officer","salesperson","stunt double","villain")
norming_means <- norming_means[(norming_means$lexeme_norm %in% later_criticals),]
norming_means_neutral <- norming_data %>%
filter(gender=="neutral") %>%
filter(neutral_morh !="male_adoption") %>%
group_by(orthog,id) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
rename(form = orthog) %>%
rename(lexeme =id)
norming_adoptions_neutral <- norming_data %>%
filter(gender=="neutral") %>%
filter(neutral_morh == "male_adoption") %>%
group_by(orthog) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
mutate(lexeme = ifelse(orthog=="actress","actor",ifelse(orthog=="heiress","heir",ifelse(orthog=="heroine","hero",ifelse(orthog=="hostess","host",ifelse(orthog=="huntress","hunter",ifelse(orthog=="villainess","villain",orthog))))))) %>%
rename(form = orthog)
norming_adoptions_neutral <- norming_adoptions_neutral[, c("lexeme", "form", "indi_mean", "trial_count")]
norming_means_neutral <- rbind(norming_means_neutral,norming_adoptions_neutral)
norming_means_neutral <- norming_means_neutral[(norming_means_neutral$lexeme %in% later_criticals),]
prod_data <- read.csv("production_data.csv")
prod_exclusion <- prod_data %>% filter(name=='attention') %>%
group_by(workerid) %>%
summarise(accuracy = mean(correct)) %>%
mutate(exclude = ifelse(accuracy < 0.80,'Yes','No')) %>%
filter(exclude == "Yes")
prod_data <- prod_data[!(prod_data$workerid %in% prod_exclusion$workerid),]
gender_transcendence_cols <- c('subject_information.gender_q1','subject_information.gender_q2','subject_information.gender_q3','subject_information.gender_q4','subject_information.gender_q5')
gender_linked_cols <- c('subject_information.gender_q6','subject_information.gender_q7','subject_information.gender_q8','subject_information.gender_q9','subject_information.gender_q10','subject_information.gender_q11','subject_information.gender_q12','subject_information.gender_q13')
prod_data <- prod_data %>%
mutate(gender_trans = 100 - (rowMeans(prod_data[gender_transcendence_cols]))) %>%
mutate(gender_link = rowMeans(prod_data[gender_linked_cols]))
gender_all = c('gender_trans','gender_link')
prod_data <- prod_data %>%
mutate(gender_total = rowMeans(prod_data[gender_all]))
prod_data <- prod_data %>%
filter(type == "critical") %>%
mutate(response_gender = ifelse(response == "actress" | response == "anchorwoman" | response == "stewardess" | response == "businesswoman" | response == 'camerawoman' | response == 'congresswoman' | response == 'craftswoman' | response == 'crewwoman' | response == 'firewoman' | response == 'forewoman'  | response == 'heiress' | response == 'heroine' | response == 'hostess' | response == 'huntress' | response == 'laywoman' | response == 'policewoman' | response == 'saleswoman' | response == 'stuntwoman' | response == 'villainess' | response == 'weatherwoman',"female",ifelse(response == "anchor" | response == "flight attendant" | response == "businessperson" | response == 'camera operator' | response == 'congressperson' | response == 'craftsperson' | response == 'crewmember' | response == 'firefighter' | response == 'foreperson' | response == 'layperson' | response == 'police officer' | response == 'salesperson' | response == 'stunt double' | response == 'meteorologist',"neutral",ifelse(response == "anchorman" | response == "steward" | response == "businessman" | response == 'cameraman' | response == 'congressman' | response == 'craftsman' | response == 'crewman' | response == 'fireman' | response == 'foreman' | response == 'layman' | response == 'policeman' | response == 'salesman' | response == 'stuntman' | response == 'weatherman',"male",'neutral')))) %>%
mutate(congruency = ifelse(gender == response_gender,"true","false")) %>%
mutate(incongruent = ifelse(gender == "male" & response_gender == "female","incongruent_mtf",ifelse(gender == "female" & response_gender == "male","incongruent_ftm","real"))) %>%
mutate(neutrality = ifelse(response_gender == "neutral","true","false"))%>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption')) %>%
mutate(poli_party = ifelse(subject_information.party_alignment == 1 | subject_information.party_alignment == 2,'Republican',ifelse(subject_information.party_alignment == 4 | subject_information.party_alignment == 5,'Democrat','Non-Partisan'))) %>%
mutate(response_neutral = ifelse(response_gender == "neutral",1,0)) %>%
mutate(young_old = ifelse(subject_information.age > 40,"old","young")) %>%
rename(form = response) %>%
filter(!is.na(subject_information.age)) %>%
filter(!is.na(poli_party))
final_prod <- left_join(prod_data,norming_means,by="form")
final_prod <- left_join(final_prod,freq_lex,by="lexeme")
final_prod <- left_join(final_prod,norming_means_neutral,by="lexeme")
final_prod <- subset(final_prod, select = -c(form.y,trial_count.y,trial_count.x,error,subject_information.comments,subject_information.asses,subject_information.enjoyment,subject_information.gender_q1,subject_information.gender_q2,subject_information.gender_q3,subject_information.gender_q4,subject_information.gender_q5,subject_information.gender_q6,subject_information.gender_q7,subject_information.gender_q8,subject_information.gender_q9,subject_information.gender_q10,subject_information.gender_q11,subject_information.gender_q12,subject_information.gender_q13,lexeme_norm)) %>%
rename(form_norm = indi_mean.x, lexeme_norm = indi_mean.y, form = form.x)
net_lex <- net_lex %>%
select(lexeme,fem_odds,male_odds)
final_prod <- left_join(final_prod,net_lex,by="lexeme")
final_prod <- final_prod %>%
mutate(log_odds = case_when(
gender == "male" ~ male_odds,
gender == "female" ~ fem_odds
)) %>%
mutate(c_gender_total = scale(gender_total,scale=FALSE)) %>%
mutate(c_gender_trans = scale(gender_trans,scale=FALSE)) %>%
mutate(c_gender_link = scale(gender_link,scale=FALSE))
prod_all <- final_prod %>%
mutate(poli_party = factor(poli_party,ordered = FALSE)) %>%
mutate(trial_gender = factor(gender,ordered = FALSE)) %>%
mutate(c_trial_gender = scale(as.numeric(trial_gender),scale=FALSE))
final_prod <- final_prod %>%
mutate(poli_party = factor(poli_party,ordered = FALSE)) %>%
mutate(trial_gender = factor(gender,ordered = FALSE)) %>%
mutate(c_trial_gender = scale(as.numeric(trial_gender),scale=FALSE)) %>%
filter(incongruent == "real")
final_prod$poli_party = relevel(final_prod$poli_party, ref="Democrat")
final_prod$trial_gender = relevel(final_prod$trial_gender, ref="male")
final_prod <- final_prod %>%
mutate(c_age = scale(subject_information.age, scale=FALSE)) %>%
mutate(c_log_odds = scale(log_odds, scale=FALSE))
log_odds_model <- lmer(response_neutral~c_trial_gender*poli_party*c_gender_total + log_odds + (1+ c_trial_gender|workerid) + (1 + c_trial_gender|lexeme),data=final_prod)
summary(log_odds_model)
library(ggplot2)
library(tidyverse)
library(lme4)
library(stringr)
library(languageR)
library(lmerTest)
library(reshape2)
library(grid)
source("helpers.R")
bran_palette = c("#7ae7e5", "#fe5f55", "#B2A6DE", "#14342b", "#69385c")
theme_set(theme_minimal())
frequency <- read.csv("freq_vals.csv")
lib_cols <- c('ABC','CNN','PBS','NBC','MSNBC','NPR','CBS')
frequency <- frequency %>%
mutate(total_left = rowSums(frequency[lib_cols])) %>%
mutate(total_right = FOX) %>%
mutate(all_wpm = ((total_left + total_right) / 121500000) * 1000000) %>%
mutate(left_wpm = (total_left/109300000) * 1000000) %>%
mutate(right_wpm = (total_right/12200000) * 1000000) %>%
mutate(neutral_binary = ifelse(gender=="neutral",1,0)) %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption')) %>%
rename(form = word)
non_inds <- c('ABC','CNN','PBS','NBC','MSNBC','NPR','CBS','FOX')
test_freq <- read.csv("freq_vals.csv")
test_freq <- test_freq %>%
mutate(total = rowSums(test_freq[non_inds]))
test_freq[test_freq == 0.00000000] <- 0.0001
test_freq <- test_freq %>%
mutate(total_wpm = (total/121500000) * 1000000) %>%
mutate(log_total = log(total_wpm))
frequency %>%
group_by(lexeme)
frequency[frequency == 0.00000000] <- 0.0001
frequency <- frequency %>%
mutate(log_right = log(right_wpm), log_left = log(left_wpm), log_all = log(all_wpm))
frequency <- frequency %>%
mutate(media_diff = log_left - log_right) %>%
mutate(nonexistent = ifelse(media_diff == 0 & log_left < -4,"true","false")) %>%
mutate(freq_gender = ifelse(form == "actress" | form == "anchorwoman" | form == "stewardess" | form == "businesswoman" | form == 'camerawoman' | form == 'congresswoman' | form == 'craftswoman' | form == 'crewwoman' | form == 'firewoman' | form == 'forewoman'  | form == 'heiress' | form == 'heroine' | form == 'hostess' | form == 'huntress' | form == 'laywoman' | form == 'policewoman' | form == 'saleswoman' | form == 'stuntwoman' | form == 'villainess' | form == 'weatherwoman',"female",ifelse(form == "anchor" | form == "flight attendant" | form == "businessperson" | form == 'camera operator' | form == 'congressperson' | form == 'craftsperson' | form == 'crewmember' | form == 'firefighter' | form == 'foreperson' | form == 'layperson' | form == 'police officer' | form == 'salesperson' | form == 'stunt double' | form == 'meteorologist',"neutral",ifelse(form == "anchorman" | form == "steward" | form == "businessman" | form == 'cameraman' | form == 'congressman' | form == 'craftsman' | form == 'crewman' | form == 'fireman' | form == 'foreman' | form == 'layman' | form == 'policeman' | form == 'salesman' | form == 'stuntman' | form == 'weatherman',"male",'neutral'))))
frequency <- subset(frequency, select = -c(ABC,CNN,PBS,NBC,MSNBC,NPR,CBS,FOX))
freq_log_all <- frequency %>%
select(lexeme,freq_gender,log_all) %>%
pivot_wider(names_from = freq_gender,values_from = log_all,names_prefix="log_all_")
freq_log_right <- frequency %>%
select(lexeme,freq_gender,log_right) %>%
pivot_wider(names_from = freq_gender,values_from = log_right,names_prefix="log_right_")
freq_log_left <- frequency %>%
select(lexeme,freq_gender,log_left) %>%
pivot_wider(names_from = freq_gender,values_from = log_left,names_prefix="log_left_")
freq_lex <- left_join(freq_log_all,freq_log_right,by="lexeme")
freq_lex <- left_join(freq_lex,freq_log_left,by="lexeme")
freq_all <- frequency %>%
select(lexeme,freq_gender,all_wpm) %>%
pivot_wider(names_from = freq_gender,values_from = all_wpm,names_prefix="all_wpm_")
freq_right <- frequency %>%
select(lexeme,freq_gender,right_wpm) %>%
pivot_wider(names_from = freq_gender,values_from = right_wpm,names_prefix="right_wpm_")
freq_left <- frequency %>%
select(lexeme,freq_gender,left_wpm) %>%
pivot_wider(names_from = freq_gender,values_from = left_wpm,names_prefix="left_wpm_")
net_lex <- left_join(freq_all,freq_right,by="lexeme")
net_lex <- left_join(net_lex,freq_left,by="lexeme")
net_lex <- net_lex %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption')) %>%
mutate(
fem_odds = all_wpm_neutral / all_wpm_female,
male_odds = case_when(
morph_type == "adoption" ~ log(all_wpm_neutral / all_wpm_neutral),
morph_type == "compound" ~ log(all_wpm_neutral / all_wpm_male)
)
)
freq_lex <- freq_lex %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption')) %>%
mutate(
rel_fem_odds = log_all_neutral / log_all_female,
rel_male_odds = case_when(
morph_type == "adoption" ~ log_all_neutral / log_all_neutral,
morph_type == "compound" ~ log_all_neutral / log_all_male
)
)
norming_data <- read.csv("norming_data.csv") %>%
filter(id!="example1") %>% # Will filter out non-critical trials, i.e. the example trial from the beginning of the experiment
mutate(equalized_response = ifelse(scale=="FM",8-response,response)) %>% # This will render all data points on the same scale, as participants randomly received either "very likely a man" or "very likely a woman" as the left end of their response scale, with the other appearing at the right end
mutate(orthog = ifelse(orthog=="sroceress","sorceress",orthog)) %>% # Fixes a typo
mutate(id = ifelse(id=="Stunt_double","stunt double",id)) %>% # This, as well as all lines below it, convert compounds formed by spaces from their underscore forms to their spaced forms (e.g. police_officer -> Police officer)
mutate(id = ifelse(id=="Police_officer","police officer",id)) %>%
mutate(id = ifelse(id=="Flight_attendant","flight attendant",id)) %>%
mutate(id = ifelse(id=="Anchor","anchor",id)) %>%
mutate(id = ifelse(id=="Businessperson","businessperson",id)) %>%
mutate(id = ifelse(id=="Camera","camera operator",id)) %>%
mutate(id = ifelse(id=="Congressperson","congressperson",id)) %>%
mutate(id = ifelse(id=="Craftsperson","craftsperson",id)) %>%
mutate(id = ifelse(id=="Crewmember","crewmember",id)) %>%
mutate(id = ifelse(id=="Firefighter","firefighter",id)) %>%
mutate(id = ifelse(id=="Foreperson","foreperson",id)) %>%
mutate(id = ifelse(id=="Layperson","layperson",id)) %>%
mutate(id = ifelse(id=="Meteorologist","meteorologist",id)) %>%
mutate(id = ifelse(id=="Salesperson","salesperson",id)) %>%
mutate(id = ifelse(id=="Actor","actor",id)) %>%
mutate(id = ifelse(id=="Heir","heir",id)) %>%
mutate(id = ifelse(id=="Hero","hero",id)) %>%
mutate(id = ifelse(id=="Host","host",id)) %>%
mutate(id = ifelse(id=="Hunter","hunter",id)) %>%
mutate(id = ifelse(id=="Villain","villain",id)) %>%
mutate(orthog = ifelse(orthog=="airline steward","steward",orthog)) %>%
mutate(orthog = ifelse(orthog=="airline stewardess","stewardess",orthog))
norming_exclusion <- norming_data %>%
filter(gender=="female") %>%
group_by(workerid) %>%
summarize(female_mean = mean(equalized_response)) %>%
unique() %>%
mutate(exclusion = female_mean < mean(female_mean) - 2*sd(female_mean)) %>%
filter(exclusion==TRUE)
norming_data <- norming_data[!(norming_data$workerid %in% norming_exclusion$workerid),]
norming_means <- norming_data %>%
filter(neutral_morh !="male_adoption") %>%
group_by(orthog,id) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
rename(form = orthog) %>%
rename(lexeme =id)
norming_adoptions <- norming_data %>%
filter(neutral_morh == "male_adoption") %>%
group_by(orthog) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
mutate(lexeme = ifelse(orthog=="actress","actor",ifelse(orthog=="heiress","heir",ifelse(orthog=="heroine","hero",ifelse(orthog=="hostess","host",ifelse(orthog=="huntress","hunter",ifelse(orthog=="villainess","villain",orthog))))))) %>%
rename(form = orthog)
norming_adoptions <- norming_adoptions[, c("lexeme", "form", "indi_mean", "trial_count")]
norming_means <- rbind(norming_means,norming_adoptions) %>%
rename(lexeme_norm = lexeme)
later_criticals <- c("actor","anchor","businessperson","camera operator","congressperson","craftsperson","crewmember","firefighter","flight attendant","foreperson","heir","hero","host","hunter","layperson","meteorologist","police officer","salesperson","stunt double","villain")
norming_means <- norming_means[(norming_means$lexeme_norm %in% later_criticals),]
norming_means_neutral <- norming_data %>%
filter(gender=="neutral") %>%
filter(neutral_morh !="male_adoption") %>%
group_by(orthog,id) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
rename(form = orthog) %>%
rename(lexeme =id)
norming_adoptions_neutral <- norming_data %>%
filter(gender=="neutral") %>%
filter(neutral_morh == "male_adoption") %>%
group_by(orthog) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
mutate(lexeme = ifelse(orthog=="actress","actor",ifelse(orthog=="heiress","heir",ifelse(orthog=="heroine","hero",ifelse(orthog=="hostess","host",ifelse(orthog=="huntress","hunter",ifelse(orthog=="villainess","villain",orthog))))))) %>%
rename(form = orthog)
norming_adoptions_neutral <- norming_adoptions_neutral[, c("lexeme", "form", "indi_mean", "trial_count")]
norming_means_neutral <- rbind(norming_means_neutral,norming_adoptions_neutral)
norming_means_neutral <- norming_means_neutral[(norming_means_neutral$lexeme %in% later_criticals),]
prod_data <- read.csv("production_data.csv")
prod_exclusion <- prod_data %>% filter(name=='attention') %>%
group_by(workerid) %>%
summarise(accuracy = mean(correct)) %>%
mutate(exclude = ifelse(accuracy < 0.80,'Yes','No')) %>%
filter(exclude == "Yes")
prod_data <- prod_data[!(prod_data$workerid %in% prod_exclusion$workerid),]
gender_transcendence_cols <- c('subject_information.gender_q1','subject_information.gender_q2','subject_information.gender_q3','subject_information.gender_q4','subject_information.gender_q5')
gender_linked_cols <- c('subject_information.gender_q6','subject_information.gender_q7','subject_information.gender_q8','subject_information.gender_q9','subject_information.gender_q10','subject_information.gender_q11','subject_information.gender_q12','subject_information.gender_q13')
prod_data <- prod_data %>%
mutate(gender_trans = 100 - (rowMeans(prod_data[gender_transcendence_cols]))) %>%
mutate(gender_link = rowMeans(prod_data[gender_linked_cols]))
gender_all = c('gender_trans','gender_link')
prod_data <- prod_data %>%
mutate(gender_total = rowMeans(prod_data[gender_all]))
prod_data <- prod_data %>%
filter(type == "critical") %>%
mutate(response_gender = ifelse(response == "actress" | response == "anchorwoman" | response == "stewardess" | response == "businesswoman" | response == 'camerawoman' | response == 'congresswoman' | response == 'craftswoman' | response == 'crewwoman' | response == 'firewoman' | response == 'forewoman'  | response == 'heiress' | response == 'heroine' | response == 'hostess' | response == 'huntress' | response == 'laywoman' | response == 'policewoman' | response == 'saleswoman' | response == 'stuntwoman' | response == 'villainess' | response == 'weatherwoman',"female",ifelse(response == "anchor" | response == "flight attendant" | response == "businessperson" | response == 'camera operator' | response == 'congressperson' | response == 'craftsperson' | response == 'crewmember' | response == 'firefighter' | response == 'foreperson' | response == 'layperson' | response == 'police officer' | response == 'salesperson' | response == 'stunt double' | response == 'meteorologist',"neutral",ifelse(response == "anchorman" | response == "steward" | response == "businessman" | response == 'cameraman' | response == 'congressman' | response == 'craftsman' | response == 'crewman' | response == 'fireman' | response == 'foreman' | response == 'layman' | response == 'policeman' | response == 'salesman' | response == 'stuntman' | response == 'weatherman',"male",'neutral')))) %>%
mutate(congruency = ifelse(gender == response_gender,"true","false")) %>%
mutate(incongruent = ifelse(gender == "male" & response_gender == "female","incongruent_mtf",ifelse(gender == "female" & response_gender == "male","incongruent_ftm","real"))) %>%
mutate(neutrality = ifelse(response_gender == "neutral","true","false"))%>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption')) %>%
mutate(poli_party = ifelse(subject_information.party_alignment == 1 | subject_information.party_alignment == 2,'Republican',ifelse(subject_information.party_alignment == 4 | subject_information.party_alignment == 5,'Democrat','Non-Partisan'))) %>%
mutate(response_neutral = ifelse(response_gender == "neutral",1,0)) %>%
mutate(young_old = ifelse(subject_information.age > 40,"old","young")) %>%
rename(form = response) %>%
filter(!is.na(subject_information.age)) %>%
filter(!is.na(poli_party))
final_prod <- left_join(prod_data,norming_means,by="form")
final_prod <- left_join(final_prod,freq_lex,by="lexeme")
final_prod <- left_join(final_prod,norming_means_neutral,by="lexeme")
final_prod <- subset(final_prod, select = -c(form.y,trial_count.y,trial_count.x,error,subject_information.comments,subject_information.asses,subject_information.enjoyment,subject_information.gender_q1,subject_information.gender_q2,subject_information.gender_q3,subject_information.gender_q4,subject_information.gender_q5,subject_information.gender_q6,subject_information.gender_q7,subject_information.gender_q8,subject_information.gender_q9,subject_information.gender_q10,subject_information.gender_q11,subject_information.gender_q12,subject_information.gender_q13,lexeme_norm)) %>%
rename(form_norm = indi_mean.x, lexeme_norm = indi_mean.y, form = form.x)
net_lex <- net_lex %>%
select(lexeme,fem_odds,male_odds)
final_prod <- left_join(final_prod,net_lex,by="lexeme")
final_prod <- final_prod %>%
mutate(log_odds = case_when(
gender == "male" ~ male_odds,
gender == "female" ~ fem_odds
)) %>%
mutate(c_gender_total = scale(gender_total,scale=FALSE)) %>%
mutate(c_gender_trans = scale(gender_trans,scale=FALSE)) %>%
mutate(c_gender_link = scale(gender_link,scale=FALSE))
prod_all <- final_prod %>%
mutate(poli_party = factor(poli_party,ordered = FALSE)) %>%
mutate(trial_gender = factor(gender,ordered = FALSE)) %>%
mutate(c_trial_gender = scale(as.numeric(trial_gender),scale=FALSE))
final_prod <- final_prod %>%
mutate(poli_party = factor(poli_party,ordered = FALSE)) %>%
mutate(trial_gender = factor(gender,ordered = FALSE)) %>%
mutate(c_trial_gender = scale(as.numeric(trial_gender),scale=FALSE)) %>%
filter(incongruent == "real")
final_prod$poli_party = relevel(final_prod$poli_party, ref="Democrat")
final_prod$trial_gender = relevel(final_prod$trial_gender, ref="male")
final_prod <- final_prod %>%
mutate(c_age = scale(subject_information.age, scale=FALSE)) %>%
mutate(c_log_odds = scale(log_odds, scale=FALSE))
log_odds_model <- lmer(response_neutral~c_trial_gender*poli_party*c_gender_total + log_odds + (1+ c_trial_gender|workerid) + (1 + c_trial_gender|lexeme),data=final_prod)
summary(log_odds_model)
