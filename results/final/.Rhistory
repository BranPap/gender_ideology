position = dodge,
width=0.25) +
facet_grid(poli_party~trial_gender) +
scale_fill_manual(values = bran_palette) +
scale_alpha(range=c(0.4,1)) +
labs(y="Proportion of Responses",x="Gender Ideology", fill="Response Form Gender") +
scale_x_discrete(sec.axis = sec_axis(~ . , name = "Gender Seen", breaks = NULL, values = NULL))
args(sec_axis)
test_e %>%
group_by(response_gender,trial_gender,ideology,poli_party) %>%
summarize(proportion = mean(response),
CI.Low = ci.low(response),
CI.High = ci.high(response),
obs = n(),
participants = n_distinct(workerid)) %>%
ungroup() %>%
mutate(YMin = proportion - CI.Low,
YMax = proportion + CI.High) %>%
ggplot(aes(x=ideology,
y=proportion,
fill=response_gender,
alpha=participants)) +
geom_bar(stat="identity",
position = dodge) +
geom_errorbar(aes(ymin = YMin, ymax=YMax),
position = dodge,
width=0.25) +
facet_grid(poli_party~trial_gender) +
scale_fill_manual(values = bran_palette) +
scale_alpha(range=c(0.4,1)) +
labs(y="Proportion of Responses",x="Gender Ideology", fill="Response Form Gender") +
scale_x_discrete(sec.axis = sec_axis(~ . , name = "Gender Seen", breaks = NULL))
library(ggplot2)
library(tidyverse)
library(lme4)
library(lmerTest)
bran_palette = c("#7ae7e5", "#fe5f55", "#B2A6DE", "#14342b", "#69385c")
theme_set(theme_minimal())
frequency <- read.csv("freq_vals.csv")
lib_cols <- c('ABC','CNN','PBS','NBC','MSNBC','NPR','CBS')
frequency <- frequency %>%
mutate(total_left = rowSums(frequency[lib_cols])) %>%
mutate(total_right = FOX) %>%
mutate(all_wpm = ((total_left + total_right) / 121500000) * 1000000) %>%
mutate(left_wpm = (total_left/109300000) * 1000000) %>%
mutate(right_wpm = (total_right/12200000) * 1000000) %>%
mutate(neutral_binary = ifelse(gender=="neutral",1,0)) %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption'))
frequency <- frequency %>%
group_by(word) %>%
summarise(mean_freq_left = mean(left_wpm), mean_freq_right = mean(right_wpm), mean_freq_all = mean(all_wpm)) %>%
rename(form = word)
frequency[frequency == 0.00000000] <- 0.0001
frequency <- frequency %>%
mutate(log_right = log(mean_freq_right), log_left = log(mean_freq_left), log_all = log(mean_freq_all))
frequency <- frequency %>%
mutate(media_diff = log_left - log_right) %>%
mutate(nonexistent = ifelse(media_diff == 0 & log_left < -4,"true","false"))
norming_data <- read.csv("norming_data.csv") %>%
filter(id!="example1") %>% # Will filter out non-critical trials, i.e. the example trial from the beginning of the experiment
mutate(equalized_response = ifelse(scale=="FM",8-response,response)) %>% # This will render all data points on the same scale, as participants randomly received either "very likely a man" or "very likely a woman" as the left end of their response scale, with the other appearing at the right end
mutate(orthog = ifelse(orthog=="sroceress","sorceress",orthog)) %>% # Fixes a typo
mutate(id = ifelse(id=="Stunt_double","stunt double",id)) %>% # This, as well as all lines below it, convert compounds formed by spaces from their underscore forms to their spaced forms (e.g. police_officer -> Police officer)
mutate(id = ifelse(id=="Police_officer","police officer",id)) %>%
mutate(id = ifelse(id=="Flight_attendant","flight attendant",id)) %>%
mutate(id = ifelse(id=="Anchor","anchor",id)) %>%
mutate(id = ifelse(id=="Businessperson","businessperson",id)) %>%
mutate(id = ifelse(id=="Camera","camera operator",id)) %>%
mutate(id = ifelse(id=="Congressperson","congressperson",id)) %>%
mutate(id = ifelse(id=="Craftsperson","craftsperson",id)) %>%
mutate(id = ifelse(id=="Crewmember","crewmember",id)) %>%
mutate(id = ifelse(id=="Firefighter","firefighter",id)) %>%
mutate(id = ifelse(id=="Foreperson","foreperson",id)) %>%
mutate(id = ifelse(id=="Layperson","layperson",id)) %>%
mutate(id = ifelse(id=="Meteorologist","meteorologist",id)) %>%
mutate(id = ifelse(id=="Salesperson","salesperson",id)) %>%
mutate(id = ifelse(id=="Actor","actor",id)) %>%
mutate(id = ifelse(id=="Heir","heir",id)) %>%
mutate(id = ifelse(id=="Hero","hero",id)) %>%
mutate(id = ifelse(id=="Host","host",id)) %>%
mutate(id = ifelse(id=="Hunter","hunter",id)) %>%
mutate(id = ifelse(id=="Villain","villain",id)) %>%
mutate(orthog = ifelse(orthog=="airline steward","steward",orthog)) %>%
mutate(orthog = ifelse(orthog=="airline stewardess","stewardess",orthog))
norming_exclusion <- norming_data %>%
filter(gender=="female") %>%
group_by(workerid) %>%
summarize(female_mean = mean(equalized_response)) %>%
unique() %>%
mutate(exclusion = female_mean < mean(female_mean) - 2*sd(female_mean)) %>%
filter(exclusion==TRUE)
norming_data <- norming_data[!(norming_data$workerid %in% norming_exclusion$workerid),]
norming_means <- norming_data %>%
filter(neutral_morh !="male_adoption") %>%
group_by(orthog,id) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
rename(form = orthog) %>%
rename(lexeme =id)
norming_adoptions <- norming_data %>%
filter(neutral_morh == "male_adoption") %>%
group_by(orthog) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
mutate(lexeme = ifelse(orthog=="actress","actor",ifelse(orthog=="heiress","heir",ifelse(orthog=="heroine","hero",ifelse(orthog=="hostess","host",ifelse(orthog=="huntress","hunter",ifelse(orthog=="villainess","villain",orthog))))))) %>%
rename(form = orthog)
norming_adoptions <- norming_adoptions[, c("lexeme", "form", "indi_mean", "trial_count")]
norming_means <- rbind(norming_means,norming_adoptions) %>%
rename(lexeme_norm = lexeme)
later_criticals <- c("actor","anchor","businessperson","camera operator","congressperson","craftsperson","crewmember","firefighter","flight attendant","foreperson","heir","hero","host","hunter","layperson","meteorologist","police officer","salesperson","stunt double","villain")
norming_means <- norming_means[(norming_means$lexeme_norm %in% later_criticals),]
norming_means_neutral <- norming_data %>%
filter(gender=="neutral") %>%
filter(neutral_morh !="male_adoption") %>%
group_by(orthog,id) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
rename(form = orthog) %>%
rename(lexeme =id)
norming_adoptions_neutral <- norming_data %>%
filter(gender=="neutral") %>%
filter(neutral_morh == "male_adoption") %>%
group_by(orthog) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
mutate(lexeme = ifelse(orthog=="actress","actor",ifelse(orthog=="heiress","heir",ifelse(orthog=="heroine","hero",ifelse(orthog=="hostess","host",ifelse(orthog=="huntress","hunter",ifelse(orthog=="villainess","villain",orthog))))))) %>%
rename(form = orthog)
norming_adoptions_neutral <- norming_adoptions_neutral[, c("lexeme", "form", "indi_mean", "trial_count")]
norming_means_neutral <- rbind(norming_means_neutral,norming_adoptions_neutral)
norming_means_neutral <- norming_means_neutral[(norming_means_neutral$lexeme %in% later_criticals),]
sprt_data <- read.csv('sprt_data.csv') %>%
filter(trial_id!= 'example') %>%
filter(region=='critical')
demo_count <- read.csv('sprt_data.csv') %>%
filter(trial_id!= 'example') %>%
filter(region=='critical')
demographic <- demo_count %>%
mutate(poli_party = case_when(
subject_information.party_alignment == 1 | subject_information.party_alignment == 2 ~ "Republican",
subject_information.party_alignment == 3 ~ "Centrist",
subject_information.party_alignment == 4 | subject_information.party_alignment == 5 ~ "Democrat",
)) %>%
select(workerid,poli_party,subject_information.gender,time_in_minutes) %>%
group_by(workerid) %>%
unique()
table(demographic$subject_information.gender,demographic$poli_party)
summary(demographic)
sprt_exclusion <- sprt_data %>% group_by(workerid) %>%
summarise(accuracy = mean(response_correct)) %>%
mutate(exclude = ifelse(accuracy < 0.85,'Yes','No')) %>%
filter(exclude == 'Yes')
sprt_data <- sprt_data[!(sprt_data$workerid %in% sprt_exclusion$workerid),]
sprt_data <- sprt_data %>%
group_by(trial_id) %>%
mutate(id_mean = mean(log(rt))) %>%
mutate(exclusion = (log(rt) < mean(log(rt)) - 2*sd(log(rt))|(log(rt) > mean(log(rt)) + 2*sd(log(rt))))) %>%
ungroup() %>%
filter(exclusion==FALSE)
ad_lexemes = ["actor","host","hunter","villain","heir","hero"]
ad_lexemes <- ["actor","host","hunter","villain","heir","hero"]
ad_lexemes <- c("actor","host","hunter","villain","heir","hero")
library(ggplot2)
library(tidyverse)
library(lme4)
library(lmerTest)
bran_palette = c("#7ae7e5", "#fe5f55", "#B2A6DE", "#14342b", "#69385c")
theme_set(theme_minimal())
frequency <- read.csv("freq_vals.csv")
lib_cols <- c('ABC','CNN','PBS','NBC','MSNBC','NPR','CBS')
ad_lexemes <- c("actor","host","hunter","villain","heir","hero")
frequency <- frequency %>%
mutate(total_left = rowSums(frequency[lib_cols])) %>%
mutate(total_right = FOX) %>%
mutate(all_wpm = ((total_left + total_right) / 121500000) * 1000000) %>%
mutate(left_wpm = (total_left/109300000) * 1000000) %>%
mutate(right_wpm = (total_right/12200000) * 1000000) %>%
mutate(neutral_binary = ifelse(gender=="neutral",1,0)) %>%
mutate(morph_type = ifelse(lexeme!= 'actor' & lexeme!= 'host' & lexeme !='hunter' & lexeme!= 'villain' & lexeme!= 'heir' & lexeme!= 'hero','compound','adoption'))
`%notin%` <- Negate(`%in%`)
freq_test <- frequency %>%
mutate(morph_type2 = case_when(
lexeme %notin% ad_lexemes ~ "compound",
TRUE ~ "adoption"
))
View(freq_test)
library(ggplot2)
library(tidyverse)
library(lme4)
library(lmerTest)
bran_palette = c("#7ae7e5", "#fe5f55", "#B2A6DE", "#14342b", "#69385c")
theme_set(theme_minimal())
`%notin%` <- Negate(`%in%`)
frequency <- read.csv("freq_vals.csv")
lib_cols <- c('ABC','CNN','PBS','NBC','MSNBC','NPR','CBS')
ad_lexemes <- c("actor","host","hunter","villain","heir","hero")
frequency <- frequency %>%
mutate(total_left = rowSums(frequency[lib_cols])) %>%
mutate(total_right = FOX) %>%
mutate(all_wpm = ((total_left + total_right) / 121500000) * 1000000) %>%
mutate(left_wpm = (total_left/109300000) * 1000000) %>%
mutate(right_wpm = (total_right/12200000) * 1000000) %>%
mutate(neutral_binary = ifelse(gender=="neutral",1,0)) %>%
mutate(morph_type = case_when(
lexeme %notin% ad_lexemes ~ "compound",
TRUE ~ "adoption"
))
frequency <- frequency %>%
group_by(word) %>%
summarise(mean_freq_left = mean(left_wpm), mean_freq_right = mean(right_wpm), mean_freq_all = mean(all_wpm)) %>%
rename(form = word)
frequency[frequency == 0.00000000] <- 0.0001
frequency <- frequency %>%
mutate(log_right = log(mean_freq_right), log_left = log(mean_freq_left), log_all = log(mean_freq_all))
frequency <- frequency %>%
mutate(media_diff = log_left - log_right) %>%
mutate(nonexistent = ifelse(media_diff == 0 & log_left < -4,"true","false"))
norming_data <- read.csv("norming_data.csv") %>%
filter(id!="example1") %>% # Will filter out non-critical trials, i.e. the example trial from the beginning of the experiment
mutate(equalized_response = ifelse(scale=="FM",8-response,response)) %>% # This will render all data points on the same scale, as participants randomly received either "very likely a man" or "very likely a woman" as the left end of their response scale, with the other appearing at the right end
mutate(orthog = ifelse(orthog=="sroceress","sorceress",orthog)) %>% # Fixes a typo
mutate(id = ifelse(id=="Stunt_double","stunt double",id)) %>% # This, as well as all lines below it, convert compounds formed by spaces from their underscore forms to their spaced forms (e.g. police_officer -> Police officer)
mutate(id = ifelse(id=="Police_officer","police officer",id)) %>%
mutate(id = ifelse(id=="Flight_attendant","flight attendant",id)) %>%
mutate(id = ifelse(id=="Anchor","anchor",id)) %>%
mutate(id = ifelse(id=="Businessperson","businessperson",id)) %>%
mutate(id = ifelse(id=="Camera","camera operator",id)) %>%
mutate(id = ifelse(id=="Congressperson","congressperson",id)) %>%
mutate(id = ifelse(id=="Craftsperson","craftsperson",id)) %>%
mutate(id = ifelse(id=="Crewmember","crewmember",id)) %>%
mutate(id = ifelse(id=="Firefighter","firefighter",id)) %>%
mutate(id = ifelse(id=="Foreperson","foreperson",id)) %>%
mutate(id = ifelse(id=="Layperson","layperson",id)) %>%
mutate(id = ifelse(id=="Meteorologist","meteorologist",id)) %>%
mutate(id = ifelse(id=="Salesperson","salesperson",id)) %>%
mutate(id = ifelse(id=="Actor","actor",id)) %>%
mutate(id = ifelse(id=="Heir","heir",id)) %>%
mutate(id = ifelse(id=="Hero","hero",id)) %>%
mutate(id = ifelse(id=="Host","host",id)) %>%
mutate(id = ifelse(id=="Hunter","hunter",id)) %>%
mutate(id = ifelse(id=="Villain","villain",id)) %>%
mutate(orthog = ifelse(orthog=="airline steward","steward",orthog)) %>%
mutate(orthog = ifelse(orthog=="airline stewardess","stewardess",orthog))
norming_exclusion <- norming_data %>%
filter(gender=="female") %>%
group_by(workerid) %>%
summarize(female_mean = mean(equalized_response)) %>%
unique() %>%
mutate(exclusion = female_mean < mean(female_mean) - 2*sd(female_mean)) %>%
filter(exclusion==TRUE)
norming_data <- norming_data[!(norming_data$workerid %in% norming_exclusion$workerid),]
norming_means <- norming_data %>%
filter(neutral_morh !="male_adoption") %>%
group_by(orthog,id) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
rename(form = orthog) %>%
rename(lexeme =id)
norming_adoptions <- norming_data %>%
filter(neutral_morh == "male_adoption") %>%
group_by(orthog) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
mutate(lexeme = ifelse(orthog=="actress","actor",ifelse(orthog=="heiress","heir",ifelse(orthog=="heroine","hero",ifelse(orthog=="hostess","host",ifelse(orthog=="huntress","hunter",ifelse(orthog=="villainess","villain",orthog))))))) %>%
rename(form = orthog)
norming_adoptions <- norming_adoptions[, c("lexeme", "form", "indi_mean", "trial_count")]
norming_means <- rbind(norming_means,norming_adoptions) %>%
rename(lexeme_norm = lexeme)
later_criticals <- c("actor","anchor","businessperson","camera operator","congressperson","craftsperson","crewmember","firefighter","flight attendant","foreperson","heir","hero","host","hunter","layperson","meteorologist","police officer","salesperson","stunt double","villain")
norming_means <- norming_means[(norming_means$lexeme_norm %in% later_criticals),]
norming_means_neutral <- norming_data %>%
filter(gender=="neutral") %>%
filter(neutral_morh !="male_adoption") %>%
group_by(orthog,id) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
rename(form = orthog) %>%
rename(lexeme =id)
norming_adoptions_neutral <- norming_data %>%
filter(gender=="neutral") %>%
filter(neutral_morh == "male_adoption") %>%
group_by(orthog) %>%
summarise(indi_mean = mean(equalized_response), trial_count=n()) %>%
mutate(lexeme = ifelse(orthog=="actress","actor",ifelse(orthog=="heiress","heir",ifelse(orthog=="heroine","hero",ifelse(orthog=="hostess","host",ifelse(orthog=="huntress","hunter",ifelse(orthog=="villainess","villain",orthog))))))) %>%
rename(form = orthog)
norming_adoptions_neutral <- norming_adoptions_neutral[, c("lexeme", "form", "indi_mean", "trial_count")]
norming_means_neutral <- rbind(norming_means_neutral,norming_adoptions_neutral)
norming_means_neutral <- norming_means_neutral[(norming_means_neutral$lexeme %in% later_criticals),]
sprt_data <- read.csv('sprt_data.csv') %>%
filter(trial_id!= 'example') %>%
filter(region=='critical')
demo_count <- read.csv('sprt_data.csv') %>%
filter(trial_id!= 'example') %>%
filter(region=='critical')
demographic <- demo_count %>%
mutate(poli_party = case_when(
subject_information.party_alignment == 1 | subject_information.party_alignment == 2 ~ "Republican",
subject_information.party_alignment == 3 ~ "Centrist",
subject_information.party_alignment == 4 | subject_information.party_alignment == 5 ~ "Democrat",
)) %>%
select(workerid,poli_party,subject_information.gender,time_in_minutes) %>%
group_by(workerid) %>%
unique()
table(demographic$subject_information.gender,demographic$poli_party)
summary(demographic)
sprt_exclusion <- sprt_data %>% group_by(workerid) %>%
summarise(accuracy = mean(response_correct)) %>%
mutate(exclude = case_when(
accuracy < 0.85 ~ "Yes",
TRUE ~ "No"
)) %>%
filter(exclude == 'Yes')
sprt_data <- sprt_data[!(sprt_data$workerid %in% sprt_exclusion$workerid),]
sprt_data <- sprt_data %>%
group_by(trial_id) %>%
mutate(id_mean = mean(log(rt))) %>%
mutate(exclusion = (log(rt) < mean(log(rt)) - 2*sd(log(rt))|(log(rt) > mean(log(rt)) + 2*sd(log(rt))))) %>%
ungroup() %>%
filter(exclusion==FALSE)
sprt_data <- sprt_data %>%
filter(!is.na(subject_information.age)) %>%
filter(!is.na(subject_information.party_alignment))
gender_transcendence_cols <- c('subject_information.gender_q1','subject_information.gender_q2','subject_information.gender_q3','subject_information.gender_q4','subject_information.gender_q5')
gender_linked_cols <- c('subject_information.gender_q6','subject_information.gender_q7','subject_information.gender_q8','subject_information.gender_q9','subject_information.gender_q10','subject_information.gender_q11','subject_information.gender_q12','subject_information.gender_q13')
sprt_data <- sprt_data %>%
mutate(gender_trans = 100 - (rowMeans(sprt_data[gender_transcendence_cols]))) %>%
mutate(gender_link = rowMeans(sprt_data[gender_linked_cols]))
gender_all = c('gender_trans','gender_link')
sprt_data <- sprt_data %>%
mutate(gender_total = rowMeans(sprt_data[gender_all]))
sprt_data <- sprt_data %>%
mutate(trial_gender = case_when(
condition == "neutral_female" | condition == "congruent_female" ~ "female",
TRUE ~ "male"
) )
sprt_data %>%
select(workerid,rt,condition,trial_id,trial_gender)
sprt_data <- sprt_data%>%
mutate(morph_type = case_when(
lexeme %notin% ad_lexemes ~ "compound",
TRUE ~ "adoption"
))
sprt_data %>%
select(rt,lexeme,morph_type)
sprt_data <- sprt_data %>%
mutate(form_length = str_length(form))
sprt_residual_model <- lm(log(rt)~form_length, data = sprt_data)
sprt_data <- sprt_data %>%
mutate(resid_rt = resid(sprt_residual_model))
sprt_data <- sprt_data %>%
mutate(trial_congruency = case_when(
condition == "congruent_male" | condition == "congruent_female" ~ "congruent",
TRUE ~ "neutral"
))
sprt_data <- sprt_data %>%
mutate(poli_party = case_when(
subject_information.party_alignment == 1 | subject_information.party_alignment == 2 ~ "Republican",
subject_information.party_alignment == 4 | subject_information.party_alignment == 5 ~ "Democrat",
TRUE ~ "Non-Partisan"
))
sprt_data %>%
select(workerid,subject_information.party_alignment,poli_party,trial_gender,trial_congruency)
sprt_data %>%
select(workerid,subject_information.party_alignment,poli_party,trial_gender,trial_congruency,condition)
library(ggplot2)
library(tidyverse)
library(lme4)
library(lmerTest)
bran_palette = c("#7ae7e5", "#fe5f55", "#B2A6DE", "#14342b", "#69385c")
theme_set(theme_minimal())
`%notin%` <- Negate(`%in%`)
frequency <- read.csv("freq_vals.csv")
lib_cols <- c('ABC','CNN','PBS','NBC','MSNBC','NPR','CBS')
ad_lexemes <- c("actor","host","hunter","villain","heir","hero")
frequency <- frequency %>%
mutate(total_left = rowSums(frequency[lib_cols])) %>%
mutate(total_right = FOX) %>%
mutate(all_wpm = ((total_left + total_right) / 121500000) * 1000000) %>%
mutate(left_wpm = (total_left/109300000) * 1000000) %>%
mutate(right_wpm = (total_right/12200000) * 1000000) %>%
mutate(neutral_binary = ifelse(gender=="neutral",1,0)) %>%
mutate(morph_type = case_when(
lexeme %notin% ad_lexemes ~ "compound",
TRUE ~ "adoption"
))
frequency <- frequency %>%
group_by(word) %>%
summarise(mean_freq_left = mean(left_wpm), mean_freq_right = mean(right_wpm), mean_freq_all = mean(all_wpm)) %>%
rename(form = word)
frequency[frequency == 0.00000000] <- 0.0001
frequency <- frequency %>%
mutate(log_right = log(mean_freq_right), log_left = log(mean_freq_left), log_all = log(mean_freq_all))
frequency <- frequency %>%
mutate(media_diff = log_left - log_right) %>%
mutate(nonexistent = ifelse(media_diff == 0 & log_left < -4,"true","false"))
norming_data <- read.csv("norming_data.csv") %>%
filter(id!="example1") %>% # Will filter out non-critical trials, i.e. the example trial from the beginning of the experiment
mutate(equalized_response = case_when(
scale == 'FM' ~ 8-response,
TRUE ~ response
)) %>%  # This will render all data points on the same scale, as participants randomly received either "very likely a man" or "very likely a woman" as the left end of their response scale, with the other appearing at the right end
mutate(orthog = ifelse(orthog=="sroceress","sorceress",orthog)) %>% # Fixes a typo
mutate(id == tolower(id))
rlang::last_error()
norming_data <- read.csv("norming_data.csv") %>%
filter(id!="example1") %>% # Will filter out non-critical trials, i.e. the example trial from the beginning of the experiment
mutate(equalized_response = case_when(
scale == 'FM' ~ 8L-response,
TRUE ~ response
)) %>%  # This will render all data points on the same scale, as participants randomly received either "very likely a man" or "very likely a woman" as the left end of their response scale, with the other appearing at the right end
mutate(orthog = ifelse(orthog=="sroceress","sorceress",orthog)) %>% # Fixes a typo
mutate(id == tolower(id))
View(norming_data)
norming_data <- read.csv("norming_data.csv") %>%
filter(id!="example1") %>% # Will filter out non-critical trials, i.e. the example trial from the beginning of the experiment
mutate(equalized_response = case_when(
scale == 'FM' ~ 8L-response,
TRUE ~ response
)) %>%  # This will render all data points on the same scale, as participants randomly received either "very likely a man" or "very likely a woman" as the left end of their response scale, with the other appearing at the right end
mutate(orthog = ifelse(orthog=="sroceress","sorceress",orthog)) %>% # Fixes a typo
mutate(id = tolower(id))
norming_data <- read.csv("norming_data.csv") %>%
filter(id!="example1") %>% # Will filter out non-critical trials, i.e. the example trial from the beginning of the experiment
mutate(equalized_response = case_when(
scale == 'FM' ~ as.numeric(8)-response,
TRUE ~ response
)) %>%  # This will render all data points on the same scale, as participants randomly received either "very likely a man" or "very likely a woman" as the left end of their response scale, with the other appearing at the right end
mutate(orthog = ifelse(orthog=="sroceress","sorceress",orthog)) %>% # Fixes a typo
mutate(id = tolower(id))
norming_data <- read.csv("norming_data.csv") %>%
filter(id!="example1") %>% # Will filter out non-critical trials, i.e. the example trial from the beginning of the experiment
mutate(equalized_response = case_when(
scale == 'FM' ~ as.numeric(8)-as.numeric(response),
TRUE ~ as.numeric(response)
)) %>%  # This will render all data points on the same scale, as participants randomly received either "very likely a man" or "very likely a woman" as the left end of their response scale, with the other appearing at the right end
mutate(orthog = ifelse(orthog=="sroceress","sorceress",orthog)) %>% # Fixes a typo
mutate(id = tolower(id))
# mutate(id = ifelse(id=="Meteorologist","meteorologist",id)) %>%
# mutate(id = ifelse(id=="Salesperson","salesperson",id)) %>%
# mutate(id = ifelse(id=="Actor","actor",id)) %>%
# mutate(id = ifelse(id=="Heir","heir",id)) %>%
# mutate(id = ifelse(id=="Hero","hero",id)) %>%
# mutate(id = ifelse(id=="Host","host",id)) %>%
# mutate(id = ifelse(id=="Hunter","hunter",id)) %>%
# mutate(id = ifelse(id=="Villain","villain",id)) %>%
# mutate(orthog = ifelse(orthog=="airline steward","steward",orthog)) %>%
# mutate(orthog = ifelse(orthog=="airline stewardess","stewardess",orthog))
# mutate(id = ifelse(id=="Meteorologist","meteorologist",id)) %>%
# mutate(id = ifelse(id=="Salesperson","salesperson",id)) %>%
# mutate(id = ifelse(id=="Actor","actor",id)) %>%
# mutate(id = ifelse(id=="Heir","heir",id)) %>%
# mutate(id = ifelse(id=="Hero","hero",id)) %>%
# mutate(id = ifelse(id=="Host","host",id)) %>%
# mutate(id = ifelse(id=="Hunter","hunter",id)) %>%
# mutate(id = ifelse(id=="Villain","villain",id)) %>%
# mutate(orthog = ifelse(orthog=="airline steward","steward",orthog)) %>%
# mutate(orthog = ifelse(orthog=="airline stewardess","stewardess",orthog))
```{r ECHO=TRUE}
norming_data <- read.csv("norming_data.csv") %>%
filter(id!="example1") %>% # Will filter out non-critical trials, i.e. the example trial from the beginning of the experiment
mutate(equalized_response = case_when(
scale == 'FM' ~ as.numeric(8)-as.numeric(response),
TRUE ~ as.numeric(response)
)) %>%  # This will render all data points on the same scale, as participants randomly received either "very likely a man" or "very likely a woman" as the left end of their response scale, with the other appearing at the right end
mutate(orthog = ifelse(orthog=="sroceress","sorceress",orthog)) %>% # Fixes a typo
mutate(id = tolower(id)) %>%
mutate(id = case_when(
id == "police_officer" ~ "police officer",
id == "stunt_double" ~ "stunt double",
id == 'flight_attendant' ~ 'flight attendant',
TRUE ~ id
))
norming_data <- read.csv("norming_data.csv") %>%
filter(id!="example1") %>% # Will filter out non-critical trials, i.e. the example trial from the beginning of the experiment
mutate(equalized_response = case_when(
scale == 'FM' ~ as.numeric(8)-as.numeric(response),
TRUE ~ as.numeric(response)
)) %>%  # This will render all data points on the same scale, as participants randomly received either "very likely a man" or "very likely a woman" as the left end of their response scale, with the other appearing at the right end
mutate(orthog = ifelse(orthog=="sroceress","sorceress",orthog)) %>% # Fixes a typo
mutate(id = tolower(id)) %>%
mutate(id = case_when(
id == "police_officer" ~ "police officer",
id == "stunt_double" ~ "stunt double",
id == 'flight_attendant' ~ 'flight attendant',
TRUE ~ id
)) %>%
mutate(orthog = case_when(
orthog == 'airline steward' ~ 'steward',
orthog == 'airline stewardess' ~ 'stewardess',
TRUE ~ orthog
))
frequency <- frequency %>%
mutate(total_left = rowSums(frequency[lib_cols])) %>%
mutate(total_right = FOX) %>%
mutate(all_wpm = ((total_left + total_right) / 121500000) * 1000000) %>%
mutate(left_wpm = (total_left/109300000) * 1000000) %>%
mutate(right_wpm = (total_right/12200000) * 1000000) %>%
mutate(neutral_binary = case_when(
gender == 'neutral' ~ as.numeric(1),
TRUE ~ as.numeric(0)
)) %>%
mutate(morph_type = case_when(
lexeme %notin% ad_lexemes ~ "compound",
TRUE ~ "adoption"
))
lib_cols <- c('ABC','CNN','PBS','NBC','MSNBC','NPR','CBS')
frequency <- frequency %>%
mutate(total_left = rowSums(frequency[lib_cols])) %>%
mutate(total_right = FOX) %>%
mutate(all_wpm = ((total_left + total_right) / 121500000) * 1000000) %>%
mutate(left_wpm = (total_left/109300000) * 1000000) %>%
mutate(right_wpm = (total_right/12200000) * 1000000) %>%
mutate(neutral_binary = case_when(
gender == 'neutral' ~ as.numeric(1),
TRUE ~ as.numeric(0)
)) %>%
mutate(morph_type = case_when(
lexeme %notin% ad_lexemes ~ "compound",
TRUE ~ "adoption"
))
